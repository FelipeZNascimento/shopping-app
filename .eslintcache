[{"D:\\workspace\\shopping-app\\src\\index.tsx":"1","D:\\workspace\\shopping-app\\src\\serviceWorker.ts":"2","D:\\workspace\\shopping-app\\src\\store\\main\\reducer.js":"3","D:\\workspace\\shopping-app\\src\\components\\index.ts":"4","D:\\workspace\\shopping-app\\src\\sections\\index.ts":"5","D:\\workspace\\shopping-app\\src\\store\\shopping_list\\reducer.ts":"6","D:\\workspace\\shopping-app\\src\\store\\purchase\\reducer.ts":"7","D:\\workspace\\shopping-app\\src\\constants\\routes.jsx":"8","D:\\workspace\\shopping-app\\src\\store\\actionTypes.js":"9","D:\\workspace\\shopping-app\\src\\utils\\utils.ts":"10","D:\\workspace\\shopping-app\\src\\components\\dialogs\\confirmation_dialog.tsx":"11","D:\\workspace\\shopping-app\\src\\components\\autocomplete\\autocomplete.tsx":"12","D:\\workspace\\shopping-app\\src\\components\\dialogs\\form_dialog.tsx":"13","D:\\workspace\\shopping-app\\src\\components\\datepicker\\datepicker.tsx":"14","D:\\workspace\\shopping-app\\src\\components\\section_cards\\section_cards.tsx":"15","D:\\workspace\\shopping-app\\src\\components\\notification\\notification.tsx":"16","D:\\workspace\\shopping-app\\src\\components\\table\\table.tsx":"17","D:\\workspace\\shopping-app\\src\\sections\\categories\\categories.tsx":"18","D:\\workspace\\shopping-app\\src\\sections\\brands\\brands.tsx":"19","D:\\workspace\\shopping-app\\src\\sections\\menu\\menu.tsx":"20","D:\\workspace\\shopping-app\\src\\sections\\sidebar_list\\sidebar_list.tsx":"21","D:\\workspace\\shopping-app\\src\\sections\\purchases_section\\list\\list.tsx":"22","D:\\workspace\\shopping-app\\src\\sections\\purchases_section\\purchases_section.tsx":"23","D:\\workspace\\shopping-app\\src\\sections\\purchases_section\\shopping_list\\shopping_list.tsx":"24","D:\\workspace\\shopping-app\\src\\sections\\places_section\\places_section.tsx":"25","D:\\workspace\\shopping-app\\src\\components\\error_dialog\\error_dialog.jsx":"26","D:\\workspace\\shopping-app\\src\\components\\dropdown\\dropdown.jsx":"27","D:\\workspace\\shopping-app\\src\\store\\main\\selector.js":"28","D:\\workspace\\shopping-app\\src\\services\\dataGetters.js":"29","D:\\workspace\\shopping-app\\src\\services\\dataDeleters.js":"30","D:\\workspace\\shopping-app\\src\\services\\dataSetters.js":"31","D:\\workspace\\shopping-app\\src\\store\\purchase\\actions.ts":"32","D:\\workspace\\shopping-app\\src\\store\\shopping_list\\actions.ts":"33","D:\\workspace\\shopping-app\\src\\store\\purchase\\selector.ts":"34","D:\\workspace\\shopping-app\\src\\constants\\general.tsx":"35","D:\\workspace\\shopping-app\\src\\sections\\purchases_section\\list\\components\\total_purchase_card.tsx":"36","D:\\workspace\\shopping-app\\src\\sections\\purchases_section\\list\\components\\purchase_card.tsx":"37","D:\\workspace\\shopping-app\\src\\constants\\products.jsx":"38","D:\\workspace\\shopping-app\\src\\utils\\fontAwesomeIconMapper.jsx":"39","D:\\workspace\\shopping-app\\src\\store\\main\\actions.ts":"40","D:\\workspace\\shopping-app\\src\\constants\\places.jsx":"41","D:\\workspace\\shopping-app\\src\\sections\\brands\\components\\delete_brand_modal.tsx":"42","D:\\workspace\\shopping-app\\src\\sections\\brands\\components\\add_brand_modal.tsx":"43","D:\\workspace\\shopping-app\\src\\sections\\categories\\components\\delete_category_modal.tsx":"44","D:\\workspace\\shopping-app\\src\\sections\\categories\\components\\add_category_modal.tsx":"45","D:\\workspace\\shopping-app\\src\\constants\\objectModels.tsx":"46","D:\\workspace\\shopping-app\\src\\sections\\products_section\\products_section.tsx":"47","D:\\workspace\\shopping-app\\src\\sections\\places_section\\list\\places.tsx":"48","D:\\workspace\\shopping-app\\src\\sections\\places_section\\list\\components\\delete_place_modal.tsx":"49","D:\\workspace\\shopping-app\\src\\sections\\places_section\\list\\components\\add_place_modal.tsx":"50","D:\\workspace\\shopping-app\\src\\sections\\products_section\\list\\components\\add_product_modal.tsx":"51","D:\\workspace\\shopping-app\\src\\sections\\products_section\\list\\components\\delete_product_modal.tsx":"52","D:\\workspace\\shopping-app\\src\\sections\\places_section\\categories_list\\categories_list.tsx":"53","D:\\workspace\\shopping-app\\src\\services\\utilities.js":"54","D:\\workspace\\shopping-app\\src\\sections\\products_section\\categories_list\\categories_list.tsx":"55","D:\\workspace\\shopping-app\\src\\sections\\products_section\\list\\products.tsx":"56","D:\\workspace\\shopping-app\\src\\components\\search_input\\search_input.tsx":"57","D:\\workspace\\shopping-app\\src\\store\\product\\reducer.ts":"58","D:\\workspace\\shopping-app\\src\\store\\product\\selector.ts":"59","D:\\workspace\\shopping-app\\src\\store\\product\\actions.ts":"60","D:\\workspace\\shopping-app\\src\\constants\\objectInterfaces.tsx":"61","D:\\workspace\\shopping-app\\src\\store\\shopping_list\\selector.ts":"62","D:\\workspace\\shopping-app\\src\\store\\brand\\reducer.ts":"63","D:\\workspace\\shopping-app\\src\\store\\brand\\actions.ts":"64","D:\\workspace\\shopping-app\\src\\store\\brand\\selector.ts":"65","D:\\workspace\\shopping-app\\src\\store\\place\\actions.ts":"66","D:\\workspace\\shopping-app\\src\\store\\place\\reducer.ts":"67","D:\\workspace\\shopping-app\\src\\store\\place\\selector.ts":"68","D:\\workspace\\shopping-app\\src\\components\\separator\\separator.tsx":"69","D:\\workspace\\shopping-app\\src\\components\\loading\\loading.tsx":"70"},{"size":7023,"mtime":1617029910655,"results":"71","hashOfConfig":"72"},{"size":4559,"mtime":1607469607040,"results":"73","hashOfConfig":"72"},{"size":1243,"mtime":1616616618531,"results":"74","hashOfConfig":"72"},{"size":789,"mtime":1616536812603,"results":"75","hashOfConfig":"72"},{"size":1005,"mtime":1616454944360,"results":"76","hashOfConfig":"72"},{"size":2615,"mtime":1617299217435,"results":"77","hashOfConfig":"72"},{"size":2090,"mtime":1617299063426,"results":"78","hashOfConfig":"72"},{"size":507,"mtime":1616414159364,"results":"79","hashOfConfig":"72"},{"size":7864,"mtime":1616614122288,"results":"80","hashOfConfig":"72"},{"size":588,"mtime":1616537198944,"results":"81","hashOfConfig":"72"},{"size":1748,"mtime":1606847028534,"results":"82","hashOfConfig":"72"},{"size":1550,"mtime":1617029910653,"results":"83","hashOfConfig":"72"},{"size":1321,"mtime":1617035758373,"results":"84","hashOfConfig":"72"},{"size":1048,"mtime":1608475585630,"results":"85","hashOfConfig":"72"},{"size":658,"mtime":1616364085573,"results":"86","hashOfConfig":"72"},{"size":1691,"mtime":1607370077597,"results":"87","hashOfConfig":"72"},{"size":6906,"mtime":1617039274252,"results":"88","hashOfConfig":"72"},{"size":2773,"mtime":1617039614960,"results":"89","hashOfConfig":"72"},{"size":5555,"mtime":1617294563277,"results":"90","hashOfConfig":"72"},{"size":5275,"mtime":1616956297403,"results":"91","hashOfConfig":"72"},{"size":2708,"mtime":1616619886031,"results":"92","hashOfConfig":"72"},{"size":5801,"mtime":1617036668860,"results":"93","hashOfConfig":"72"},{"size":685,"mtime":1616497991041,"results":"94","hashOfConfig":"72"},{"size":5801,"mtime":1617297916155,"results":"95","hashOfConfig":"72"},{"size":546,"mtime":1616414306096,"results":"96","hashOfConfig":"72"},{"size":1717,"mtime":1605356289372,"results":"97","hashOfConfig":"72"},{"size":1143,"mtime":1605356289373,"results":"98","hashOfConfig":"72"},{"size":1024,"mtime":1616591809783,"results":"99","hashOfConfig":"72"},{"size":904,"mtime":1616614941465,"results":"100","hashOfConfig":"72"},{"size":764,"mtime":1616595669065,"results":"101","hashOfConfig":"72"},{"size":5660,"mtime":1617029910662,"results":"102","hashOfConfig":"72"},{"size":2425,"mtime":1617029910664,"results":"103","hashOfConfig":"72"},{"size":3260,"mtime":1617029910666,"results":"104","hashOfConfig":"72"},{"size":519,"mtime":1617299008644,"results":"105","hashOfConfig":"72"},{"size":2546,"mtime":1617036489345,"results":"106","hashOfConfig":"72"},{"size":2345,"mtime":1617029910659,"results":"107","hashOfConfig":"72"},{"size":5612,"mtime":1617029910659,"results":"108","hashOfConfig":"72"},{"size":264,"mtime":1616422494839,"results":"109","hashOfConfig":"72"},{"size":1109,"mtime":1605356289377,"results":"110","hashOfConfig":"72"},{"size":5711,"mtime":1617029910663,"results":"111","hashOfConfig":"72"},{"size":177,"mtime":1605356289373,"results":"112","hashOfConfig":"72"},{"size":1024,"mtime":1606764508804,"results":"113","hashOfConfig":"72"},{"size":1284,"mtime":1616616219584,"results":"114","hashOfConfig":"72"},{"size":1079,"mtime":1606785157394,"results":"115","hashOfConfig":"72"},{"size":1100,"mtime":1617029910656,"results":"116","hashOfConfig":"72"},{"size":443,"mtime":1616424720519,"results":"117","hashOfConfig":"72"},{"size":552,"mtime":1616414312186,"results":"118","hashOfConfig":"72"},{"size":5737,"mtime":1617296420462,"results":"119","hashOfConfig":"72"},{"size":1347,"mtime":1616416203389,"results":"120","hashOfConfig":"72"},{"size":3099,"mtime":1617036668859,"results":"121","hashOfConfig":"72"},{"size":2897,"mtime":1617036668859,"results":"122","hashOfConfig":"72"},{"size":1343,"mtime":1616416489985,"results":"123","hashOfConfig":"72"},{"size":4566,"mtime":1617296159812,"results":"124","hashOfConfig":"72"},{"size":1496,"mtime":1617029910662,"results":"125","hashOfConfig":"72"},{"size":4599,"mtime":1617296154897,"results":"126","hashOfConfig":"72"},{"size":8087,"mtime":1617295382550,"results":"127","hashOfConfig":"72"},{"size":869,"mtime":1617029910653,"results":"128","hashOfConfig":"72"},{"size":6604,"mtime":1617298533046,"results":"129","hashOfConfig":"72"},{"size":1075,"mtime":1617298497051,"results":"130","hashOfConfig":"72"},{"size":6861,"mtime":1616615639515,"results":"131","hashOfConfig":"72"},{"size":1507,"mtime":1616543168834,"results":"132","hashOfConfig":"72"},{"size":293,"mtime":1617299200077,"results":"133","hashOfConfig":"72"},{"size":3153,"mtime":1617298289428,"results":"134","hashOfConfig":"72"},{"size":3420,"mtime":1616607542636,"results":"135","hashOfConfig":"72"},{"size":612,"mtime":1617298348249,"results":"136","hashOfConfig":"72"},{"size":6851,"mtime":1616617633387,"results":"137","hashOfConfig":"72"},{"size":6468,"mtime":1617298077391,"results":"138","hashOfConfig":"72"},{"size":1019,"mtime":1617296128634,"results":"139","hashOfConfig":"72"},{"size":132,"mtime":1617029910654,"results":"140","hashOfConfig":"72"},{"size":498,"mtime":1617037354724,"results":"141","hashOfConfig":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"yh2s65",{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"144"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"144"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"144"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"144"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"149"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"149"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"144"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"144"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"144"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"144"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"144"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"144"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"D:\\workspace\\shopping-app\\src\\index.tsx",[],["296","297"],"D:\\workspace\\shopping-app\\src\\serviceWorker.ts",[],"D:\\workspace\\shopping-app\\src\\store\\main\\reducer.js",[],["298","299"],"D:\\workspace\\shopping-app\\src\\components\\index.ts",[],"D:\\workspace\\shopping-app\\src\\sections\\index.ts",[],"D:\\workspace\\shopping-app\\src\\store\\shopping_list\\reducer.ts",[],"D:\\workspace\\shopping-app\\src\\store\\purchase\\reducer.ts",[],"D:\\workspace\\shopping-app\\src\\constants\\routes.jsx",[],"D:\\workspace\\shopping-app\\src\\store\\actionTypes.js",[],"D:\\workspace\\shopping-app\\src\\utils\\utils.ts",["300","301"],"export const dynamicSort = (property: string) => {\r\n    let sortOrder = 1;\r\n    if (property[0] === \"-\") {\r\n        sortOrder = -1;\r\n        property = property.substr(1);\r\n    }\r\n    return function (a: any, b: any) {\r\n        /* next line works with strings and numbers, \r\n         * and you may want to customize it to your needs\r\n         */\r\n        const result = a[property].localeCompare(b[property]);\r\n        return result * sortOrder;\r\n    }\r\n}\r\n\r\nexport const invertSort = (sort: string) => {\r\n    if (sort === 'ASC') {\r\n        return 'DESC';\r\n    }\r\n\r\n    return 'ASC';\r\n}\r\n","D:\\workspace\\shopping-app\\src\\components\\dialogs\\confirmation_dialog.tsx",[],"D:\\workspace\\shopping-app\\src\\components\\autocomplete\\autocomplete.tsx",["302"],"import React from 'react';\r\n\r\nimport MaterialAutocomplete from '@material-ui/lab/Autocomplete';\r\nimport { TextField } from '@material-ui/core/';\r\nimport { IAutocompleteItem } from './types';\r\n\r\ninterface IProps {\r\n    disabled?: boolean;\r\n    freeSolo?: boolean;\r\n    selected?: IAutocompleteItem | null;\r\n    options: IAutocompleteItem[];\r\n    onChange: (selectedOption: IAutocompleteItem | string) => void;\r\n    title?: string;\r\n}\r\n\r\nconst Autocomplete = ({\r\n    disabled = false,\r\n    freeSolo = false,\r\n    options = [],\r\n    selected = null,\r\n    title = 'Selecione uma opção',\r\n    onChange\r\n}: IProps) => {\r\n    const handleChange = (evt: any, selectedOption: string | null) => {\r\n        if (selectedOption === null) {\r\n            onChange('');\r\n        } else {\r\n            const selectedObject = options.find((option) => option.description === selectedOption);\r\n            onChange(selectedObject || selectedOption);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <MaterialAutocomplete\r\n            disabled={disabled}\r\n            freeSolo={freeSolo}\r\n            options={options.map((option) => option.description)}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label={title}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                />\r\n            )}\r\n            style={{ flex: 1 }}\r\n            value={selected?.description}\r\n            onChange={handleChange}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Autocomplete;\r\n","D:\\workspace\\shopping-app\\src\\components\\dialogs\\form_dialog.tsx",[],"D:\\workspace\\shopping-app\\src\\components\\datepicker\\datepicker.tsx",[],"D:\\workspace\\shopping-app\\src\\components\\section_cards\\section_cards.tsx",[],"D:\\workspace\\shopping-app\\src\\components\\notification\\notification.tsx",["303","304"],"import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n    errorMessage,\n    isNotificationOpen,\n    hasError,\n} from '../../store/main/selector';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nfunction Alert(props: any) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Notification = () => {\n    const dispatch = useDispatch();\n    const isErrorMessage = useSelector(hasError);\n    const isOpen = useSelector(isNotificationOpen);\n    const messageError = useSelector(errorMessage);\n\n    const toggleNotification = () => dispatch({\n        type: 'TOGGLE_NOTIFICATION',\n        status: false\n    });\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            width: '100%',\n            '& > * + *': {\n                marginTop: theme.spacing(2),\n            },\n        },\n    }));\n\n    const classes = useStyles();\n\n    const handleClose = (_: any, reason: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        toggleNotification();\n    };\n\n    const message = isErrorMessage\n        ? messageError\n        : 'Sua ação foi registrada com sucesso!';\n\n    const severity = isErrorMessage\n        ? 'error'\n        : 'success';\n\n    return (\n        <div className={classes.root}>\n            <Snackbar open={isOpen} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity={severity}>\n                    {message}\n                </Alert>\n            </Snackbar>\n        </div>\n    );\n};\n\nexport default Notification;\n","D:\\workspace\\shopping-app\\src\\components\\table\\table.tsx",["305","306","307","308","309","310"],"import React from 'react';\r\n\r\nimport {\r\n    Checkbox,\r\n    IconButton\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    PlaylistAdd,\r\n    ArrowDropDown as ArrowDropDownIcon,\r\n    ArrowDropUp as ArrowDropUpIcon,\r\n    Delete as DeleteIcon,\r\n} from '@material-ui/icons';\r\n\r\nimport {\r\n    IProduct,\r\n    ISortingState\r\n} from 'constants/objectInterfaces';\r\n\r\nimport styles from './table.module.scss';\r\n\r\ntype IHeaderColumn = {\r\n    key: string;\r\n    value: string;\r\n    sortable: boolean;\r\n}\r\n\r\ninterface IProps {\r\n    bodyColumns?: any[];\r\n    checkedProducts?: IProduct[];\r\n    color?: string;\r\n    headerColumns: IHeaderColumn[];\r\n    isLoading?: boolean;\r\n    sortState?: ISortingState;\r\n    onCheckboxAction?: null | ((item: any) => void);\r\n    onMainAction?: null | ((item: any) => void);\r\n    onSecondaryAction?: null | ((item: any) => void);\r\n    onSortChange?: null | ((column: string, direction: string) => void);\r\n}\r\n\r\nconst defaultSortingState = {\r\n    orderBy: 'description',\r\n    sort: 'ASC'\r\n};\r\n\r\nconst Table = ({\r\n    bodyColumns = [],\r\n    checkedProducts = [],\r\n    color = 'green',\r\n    headerColumns,\r\n    isLoading = false,\r\n    sortState = defaultSortingState,\r\n    onCheckboxAction = null,\r\n    onMainAction = null,\r\n    onSecondaryAction = null,\r\n    onSortChange = null\r\n}: IProps) => {\r\n    const checkboxClick = (item: any) => {\r\n        if (onCheckboxAction === null) {\r\n            return;\r\n        }\r\n\r\n        let updatedCheckedProducts;\r\n        const index = checkedProducts.findIndex((product: IProduct) => product.id === item.id);\r\n        if (index === -1) {\r\n            updatedCheckedProducts = [\r\n                ...checkedProducts,\r\n                item\r\n            ];\r\n        } else {\r\n            const filteredProducts = checkedProducts.filter((product: IProduct) => item.id !== product.id);\r\n            updatedCheckedProducts = [...filteredProducts];\r\n        }\r\n\r\n        onCheckboxAction(updatedCheckedProducts);\r\n    };\r\n\r\n    const isChecked = (item: any) => (checkedProducts.findIndex((product: IProduct) => product.id === item.id) !== -1);\r\n\r\n    const setSortingState = (key: string) => {\r\n        let newDirection = 'ASC';\r\n        if (key === sortState.orderBy) {\r\n            newDirection = sortState.sort === 'ASC' ? 'DESC' : 'ASC';\r\n        }\r\n        if (onSortChange !== null) {\r\n            onSortChange(key, newDirection);\r\n        }\r\n    };\r\n\r\n    const renderSortIcon = (key: string) => {\r\n        if (onSortChange === null) {\r\n            return;\r\n        }\r\n\r\n        if (key !== sortState.orderBy) {\r\n            return <ArrowDropDownIcon classes={{ root: 'invisible' }} />;\r\n        }\r\n\r\n        if (sortState.sort === 'ASC') {\r\n            return <ArrowDropDownIcon classes={{ root: 'of-black' }} />;\r\n        }\r\n\r\n        return <ArrowDropUpIcon classes={{ root: 'of-black' }} />;\r\n    };\r\n\r\n    const renderHeader = () => {\r\n        const tableHeader = [...headerColumns];\r\n\r\n        if (onCheckboxAction !== null) {\r\n            tableHeader.unshift({\r\n                key: 'onCheckboxAction',\r\n                value: '',\r\n                sortable: false\r\n            });\r\n        }\r\n        if (onMainAction !== null) {\r\n            tableHeader.unshift({\r\n                key: 'onMainAction',\r\n                value: '',\r\n                sortable: false\r\n            });\r\n        }\r\n        if (onSecondaryAction !== null) {\r\n            tableHeader.push({\r\n                key: 'onSecondaryAction',\r\n                value: '',\r\n                sortable: false\r\n            });\r\n        }\r\n\r\n        const renderHeaderValue = (header: IHeaderColumn) => {\r\n            if (header.sortable) {\r\n                return (\r\n                    <p\r\n                        className=\"right-padding-s margin-none clickable\"\r\n                        onClick={() => setSortingState(header.key)}\r\n                    >\r\n                        {header.value}\r\n                    </p>\r\n                )\r\n            }\r\n\r\n            return (<p className=\"right-padding-s margin-none\">{header.value}</p>);\r\n        };\r\n\r\n        return tableHeader.map((header) => {\r\n            return (\r\n                <th key={header.key}>\r\n                    <div className=\"vertical-align-center\">\r\n                        {renderHeaderValue(header)}\r\n                        {renderSortIcon(header.key)}\r\n                    </div>\r\n                </th>\r\n            );\r\n        });\r\n    };\r\n\r\n    const renderBody = () => {\r\n        if (bodyColumns.length === 0 && !isLoading) {\r\n            return (\r\n                <tr>\r\n                    <td className={styles.notFound} colSpan={20}><p>Nenhum resultado encontrado</p></td>\r\n                </tr>\r\n            );\r\n        }\r\n        return bodyColumns\r\n            .map((item) => {\r\n                return (\r\n                    <tr key={item.id} className={isChecked(item) ? 'checked' : ''}>\r\n                        {onCheckboxAction !== null\r\n                            && <td>\r\n                                <Checkbox\r\n                                    checked={isChecked(item)}\r\n                                    size=\"small\"\r\n                                    inputProps={{ 'aria-label': 'checkbox with small size' }}\r\n                                    onClick={() => checkboxClick(item)}\r\n                                />\r\n                            </td>\r\n                        }\r\n                        {onMainAction !== null\r\n                            && <td><IconButton\r\n                                aria-label=\"add\"\r\n                                onClick={() => onMainAction(item)}\r\n                            >\r\n                                <PlaylistAdd classes={{ root: 'of-green' }} />\r\n                            </IconButton></td>\r\n                        }\r\n                        {item.category_id && <td className=\"of-white\">{item.category_description}</td>}\r\n                        <td>{item.description}</td>\r\n\r\n                        {onSecondaryAction !== null\r\n                            && <td className=\"align-right\">\r\n                                <IconButton\r\n                                    aria-label=\"delete\"\r\n                                    onClick={() => onSecondaryAction(item)}\r\n                                >\r\n                                    <DeleteIcon classes={{ root: 'of-red' }} />\r\n                                </IconButton>\r\n                            </td>\r\n                        }\r\n                    </tr>\r\n                );\r\n            });\r\n    };\r\n\r\n    return (\r\n        <table className={styles.table}>\r\n            <thead className={styles[`${color}-bg`]}>\r\n                <tr>\r\n                    {renderHeader()}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {renderBody()}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n","D:\\workspace\\shopping-app\\src\\sections\\categories\\categories.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\brands\\brands.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\menu\\menu.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\sidebar_list\\sidebar_list.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\purchases_section\\list\\list.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\purchases_section\\purchases_section.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\purchases_section\\shopping_list\\shopping_list.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\places_section\\places_section.tsx",[],"D:\\workspace\\shopping-app\\src\\components\\error_dialog\\error_dialog.jsx",["311"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport class ErrorDialog extends Component {\n    render() {\n        const { errorMessage, error, onClose } = this.props;\n\n        return (\n            <Dialog\n                open={error}\n                onClose={onClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">Erro</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {errorMessage}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        autoFocus\n                        disableElevation\n                        classes={{ root: 'flex-grow' }}\n                        color=\"secondary\"\n                        onClick={onClose}\n                    >\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\nErrorDialog.propTypes = {\n    error: PropTypes.bool.isRequired,\n    errorMessage: PropTypes.string,\n    onClose: PropTypes.func.isRequired,\n};\n\nErrorDialog.defaultProps = {\n    errorMessage: 'Error',\n};\n\nexport default ErrorDialog;\n","D:\\workspace\\shopping-app\\src\\components\\dropdown\\dropdown.jsx",["312"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass Dropdown extends React.Component {\n    renderOptions() {\n        const { options } = this.props;\n\n        return options.map((option) => (\n            <option className=\"dropdown--option\" key={option.id} value={option.name}>{option.name}</option>\n        ));\n    }\n\n    render() {\n        const { title } = this.props;\n\n        return (\n            <select\n                className=\"dropdown--select\"\n                defaultValue=\"\"\n                id={title}\n                name={title}\n            >\n                <option\n                    className=\"dropdown--option\"\n                    disabled\n                    value=\"\"\n                >\n                    {title}\n                </option>\n                {this.renderOptions()}\n            </select>\n        );\n    }\n}\n\nDropdown.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n    })),\n    title: PropTypes.string,\n};\n\nDropdown.defaultProps = {\n    options: [],\n    title: 'Selecione uma opção',\n};\n\nexport default Dropdown;\n","D:\\workspace\\shopping-app\\src\\store\\main\\selector.js",[],"D:\\workspace\\shopping-app\\src\\services\\dataGetters.js",[],"D:\\workspace\\shopping-app\\src\\services\\dataDeleters.js",[],"D:\\workspace\\shopping-app\\src\\services\\dataSetters.js",[],"D:\\workspace\\shopping-app\\src\\store\\purchase\\actions.ts",[],"D:\\workspace\\shopping-app\\src\\store\\shopping_list\\actions.ts",[],"D:\\workspace\\shopping-app\\src\\store\\purchase\\selector.ts",[],"D:\\workspace\\shopping-app\\src\\constants\\general.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\purchases_section\\list\\components\\total_purchase_card.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\purchases_section\\list\\components\\purchase_card.tsx",["313","314"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Checkbox,\r\n    IconButton,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport { Remove as RemoveIcon } from '@material-ui/icons';\r\n\r\nimport { Autocomplete } from 'components/index';\r\n\r\nimport { getBrands } from 'store/brand/selector';\r\nimport { fetchBrands } from 'store/brand/actions';\r\nimport styles from './purchase_card.module.scss';\r\n\r\nimport {\r\n    IBrand,\r\n    IPurchaseItem\r\n} from 'constants/objectInterfaces';\r\n\r\nimport { productUnits } from 'constants/products';\r\n\r\ninterface IProps {\r\n    item: IPurchaseItem\r\n    onDelete: (item: IPurchaseItem) => void;\r\n    onUpdate: (item: IPurchaseItem) => void;\r\n}\r\n\r\nconst PurchaseCard = ({\r\n    item,\r\n    onDelete,\r\n    onUpdate\r\n}: IProps) => {\r\n    const [itemInfo, setItemInfo] = useState(item);\r\n    const [currentUnit, setCurrentUnit] = useState(productUnits[0]);\r\n    const dispatch = useDispatch();\r\n\r\n    const brands: IBrand[] = useSelector(getBrands);\r\n\r\n    useEffect(() => {\r\n        if (brands.length === 0) {\r\n            dispatch(fetchBrands())\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        onUpdate(itemInfo);\r\n        setCurrentUnit(productUnits.find((unit) => unit.id === itemInfo.unit) || productUnits[0]);\r\n    }, [itemInfo]);\r\n\r\n    const cardClass = classNames(\r\n        [styles.card], {\r\n        [styles.greenBorder]: itemInfo.total_price > 0\r\n    });\r\n\r\n    return (\r\n        <Card className={cardClass}>\r\n            <CardContent>\r\n                <CardHeader\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"settings\"\r\n                            onClick={() => onDelete(item)}\r\n                        >\r\n                            <RemoveIcon classes={{ root: 'of-red' }} />\r\n                        </IconButton>\r\n                    }\r\n                    classes={{\r\n                        title: styles.title,\r\n                        subheader: styles.subtitle\r\n                    }}\r\n                    title={item.description}\r\n                    subheader={item.category_description}\r\n                />\r\n                <div className={styles.cardElementContainer}>\r\n                    <Autocomplete\r\n                        options={brands}\r\n                        title=\"Marca\"\r\n                        onChange={(item: any) => setItemInfo({\r\n                            ...itemInfo,\r\n                            brand_description: item ? item.description : '',\r\n                            brand_id: item ? item.id : null\r\n                        })}\r\n                    />\r\n                </div>\r\n                <div className={styles.cardElementContainer}>\r\n                    <div className={styles.cardElement}>\r\n                        <TextField\r\n                            required\r\n                            id=\"price\"\r\n                            InputProps={{ inputProps: { min: 0 } }}\r\n                            label=\"Qtd\"\r\n                            type=\"number\"\r\n                            value={itemInfo.quantity}\r\n                            onChange={(e) => setItemInfo({\r\n                                ...itemInfo,\r\n                                quantity: parseFloat(e.target.value)\r\n                            })}\r\n                        />\r\n                    </div>\r\n                    <div className={styles.cardElement}>\r\n                        <Autocomplete\r\n                            options={productUnits}\r\n                            selected={currentUnit}\r\n                            title=\"Unidade\"\r\n                            onChange={(item: any) => {\r\n                                setItemInfo({\r\n                                    ...itemInfo,\r\n                                    unit: item.id\r\n                                })\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className={styles.cardElementContainer}>\r\n                    <div className={styles.cardElement}>\r\n                        <TextField\r\n                            required\r\n                            id=\"price\"\r\n                            InputProps={{ inputProps: { min: 0 } }}\r\n                            label={`€/${currentUnit.description}`}\r\n                            type=\"number\"\r\n                            value={itemInfo.price}\r\n                            onChange={(e) => setItemInfo({\r\n                                ...itemInfo,\r\n                                price: parseFloat(e.target.value),\r\n                            })}\r\n                        />\r\n                    </div>\r\n                    <div className={`${styles.cardElement} ${styles.flexCenter}`}>\r\n                        Promo?\r\n                        <Checkbox\r\n                            size=\"small\"\r\n                            inputProps={{ 'aria-label': 'checkbox with small size' }}\r\n                            onChange={(e) => setItemInfo({\r\n                                ...itemInfo,\r\n                                promotion: e.target.checked\r\n                            })}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n            <CardActions className={styles.footer}>\r\n                €{itemInfo.total_price}\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default PurchaseCard;\r\n","D:\\workspace\\shopping-app\\src\\constants\\products.jsx",[],"D:\\workspace\\shopping-app\\src\\utils\\fontAwesomeIconMapper.jsx",["315","316"],"D:\\workspace\\shopping-app\\src\\store\\main\\actions.ts",[],"D:\\workspace\\shopping-app\\src\\constants\\places.jsx",[],"D:\\workspace\\shopping-app\\src\\sections\\brands\\components\\delete_brand_modal.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\brands\\components\\add_brand_modal.tsx",["317"],"import React, { useState } from 'react';\n\nimport { TextField } from '@material-ui/core';\nimport { FormDialog } from 'components/index';\nimport { IBrand } from 'constants/objectInterfaces';\n\ninterface IProps {\n    isOpen: boolean;\n    onClose: () => void;\n    onConfirm: (newBrand: IBrand) => void;\n}\n\nconst AddBrandModal = ({\n    isOpen,\n    onClose,\n    onConfirm\n}: IProps) => {\n    const [brandName, setBrandName] = useState<string>('');\n\n    const onDescriptionChange = (event: any) => {\n        const value = event.target.value;\n        setBrandName(value);\n    };\n\n    const onDialogConfirm = () => {\n        const newBrand: IBrand = {\n            id: null,\n            created: '',\n            description: brandName\n        };\n\n        onConfirm(newBrand);\n    }\n\n    return (\n        <FormDialog\n            isEnable={brandName !== ''}\n            isOpen={isOpen}\n            onClose={onClose}\n            onConfirm={onDialogConfirm}\n            title='Adicionar Nova Marca'\n        >\n            <TextField\n                autoFocus\n                fullWidth\n                id=\"description\"\n                label=\"Nome\"\n                type=\"text\"\n                onChange={onDescriptionChange}\n            />\n        </FormDialog>\n    );\n};\n\nexport default AddBrandModal;\n","D:\\workspace\\shopping-app\\src\\sections\\categories\\components\\delete_category_modal.tsx",["318"],"import React from 'react';\n\nimport { TextField } from '@material-ui/core';\nimport { ICategory } from '../../../constants/objectInterfaces';\n\nimport ConfirmationDialog from '../../../components/dialogs/confirmation_dialog';\n\ninterface IProps {\n    category: ICategory | null;\n    onClose: () => void;\n    onConfirm: (object: any) => void;\n}\n\nconst DeleteCategoryModal = ({\n    onClose,\n    onConfirm,\n    category\n}: IProps) => {\n    const renderContent = () => {\n        return (\n            <>\n                <TextField\n                    disabled\n                    fullWidth\n                    id=\"description\"\n                    label=\"Nome\"\n                    type=\"text\"\n                    value={category?.description}\n                />\n            </>\n        );\n    };\n\n    return (\n        <ConfirmationDialog\n            open={category !== null}\n            onClose={onClose}\n            onConfirm={() => onConfirm(category)}\n            title='Remover Categoria'\n            content={renderContent()}\n        />\n    );\n};\n\nexport default DeleteCategoryModal;\n","D:\\workspace\\shopping-app\\src\\sections\\categories\\components\\add_category_modal.tsx",["319","320"],"import React, { useState } from 'react';\r\n\r\nimport { TextField } from '@material-ui/core';\r\nimport { FormDialog } from 'components/index';\r\n\r\ninterface IProps {\r\n    isOpen: boolean;\r\n    onClose: () => void;\r\n    onConfirm: (object: any) => void;\r\n}\r\n\r\nconst AddCategoryModal = ({\r\n    isOpen,\r\n    onClose,\r\n    onConfirm\r\n}: IProps) => {\r\n    const [newCategory, setNewCategory] = useState<string>('');\r\n\r\n    const onDescriptionChange = (event: any) => {\r\n        const value = event.target.value;\r\n        setNewCategory(value);\r\n    };\r\n\r\n    return (\r\n        <FormDialog\r\n            isEnable={newCategory !== ''}\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onConfirm={() => onConfirm(newCategory)}\r\n            title='Adicionar Nova Categoria'\r\n        >\r\n            <TextField\r\n                autoFocus\r\n                fullWidth\r\n                id=\"description\"\r\n                label=\"Nome\"\r\n                type=\"text\"\r\n                onChange={onDescriptionChange}\r\n            />\r\n        </FormDialog>\r\n    );\r\n};\r\n\r\nexport default AddCategoryModal;\r\n","D:\\workspace\\shopping-app\\src\\constants\\objectModels.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\products_section\\products_section.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\places_section\\list\\places.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\places_section\\list\\components\\delete_place_modal.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\places_section\\list\\components\\add_place_modal.tsx",["321","322"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// Actions\r\nimport { fetchPlaceCategories } from 'store/place/actions';\r\n\r\n// Selectors\r\nimport { getPlaceCategories } from 'store/place/selector';\r\n\r\nimport { TextField } from '@material-ui/core';\r\nimport { FormDialog, Autocomplete } from 'components/index';\r\n\r\nimport {\r\n    IPlace,\r\n    ICategory\r\n} from 'constants/objectInterfaces';\r\nimport {\r\n    place as placeModel\r\n} from 'constants/objectModels';\r\n\r\ninterface IProps {\r\n    isOpen: boolean;\r\n    onClose: () => void;\r\n    onConfirm: (object: IPlace) => void;\r\n}\r\n\r\nconst AddPlaceModal = ({\r\n    isOpen,\r\n    onClose,\r\n    onConfirm\r\n}: IProps) => {\r\n    const [selectedItem, setSelectedItem] = useState<IPlace>(placeModel);\r\n    const categories: ICategory[] = useSelector(getPlaceCategories);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPlaceCategories());\r\n    }, []);\r\n\r\n    const onDescriptionChange = (event: any) => {\r\n        const value = event.target.value;\r\n\r\n        if (value) {\r\n            setSelectedItem({\r\n                ...selectedItem,\r\n                created: selectedItem?.created || '',\r\n                category_id: selectedItem?.category_id,\r\n                category_description: selectedItem?.category_description || '',\r\n                description: value,\r\n                id: selectedItem?.id\r\n            });\r\n        }\r\n    };\r\n\r\n    const onCategoryChange = (\r\n        description: any = null\r\n    ) => {\r\n        let category_id = null;\r\n        let category_description = '';\r\n\r\n        if (description) {\r\n            const categoryObject = categories.find((category) => category.description === description);\r\n\r\n            if (categoryObject !== undefined && categoryObject.id) {\r\n                category_id = categoryObject.id;\r\n                category_description = categoryObject.description;\r\n            }\r\n        }\r\n\r\n        setSelectedItem({\r\n            ...selectedItem,\r\n            category_id,\r\n            category_description\r\n        });\r\n    };\r\n\r\n    const renderAddDialogForm = () => (\r\n        <>\r\n            <TextField\r\n                autoFocus\r\n                fullWidth\r\n                id=\"description\"\r\n                label=\"Nome\"\r\n                type=\"text\"\r\n                onChange={onDescriptionChange}\r\n            />\r\n            <div className=\"min-padding\">\r\n                <Autocomplete\r\n                    options={categories}\r\n                    title=\"Categoria\"\r\n                    onChange={onCategoryChange}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <FormDialog\r\n            isEnable={selectedItem.description !== '' && selectedItem.category_id !== null}\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onConfirm={() => selectedItem ? onConfirm(selectedItem) : null}\r\n            title='Adicionar Novo Lugar'\r\n        >\r\n            {renderAddDialogForm()}\r\n        </FormDialog>\r\n    );\r\n};\r\n\r\nexport default AddPlaceModal;\r\n","D:\\workspace\\shopping-app\\src\\sections\\products_section\\list\\components\\add_product_modal.tsx",["323","324"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// Actions\r\nimport { fetchProductCategories } from 'store/product/actions';\r\n\r\n// Selectors\r\nimport { getProductCategories } from 'store/product/selector';\r\n\r\nimport { TextField } from '@material-ui/core';\r\nimport { FormDialog, Autocomplete } from 'components/index';\r\nimport {\r\n    product as productModel\r\n} from 'constants/objectModels';\r\n\r\nimport {\r\n    IProduct,\r\n    ICategory\r\n} from 'constants/objectInterfaces';\r\n\r\n// import { objectTypes } from 'constants/general';\r\n\r\ninterface IProps {\r\n    isOpen: boolean;\r\n    onClose: () => void;\r\n    onConfirm: (object: IProduct) => void;\r\n}\r\n\r\nconst AddProductModal = ({\r\n    isOpen,\r\n    onClose,\r\n    onConfirm\r\n}: IProps) => {\r\n    const [selectedItem, setSelectedItem] = useState<IProduct>(productModel);\r\n    const categories: ICategory[] = useSelector(getProductCategories);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchProductCategories());\r\n    }, []);\r\n\r\n    const onDescriptionChange = (event: any) => {\r\n        setSelectedItem({\r\n            ...selectedItem,\r\n            description: event.target.value\r\n        });\r\n    };\r\n\r\n    const onCategoryChange = (\r\n        description: any = null\r\n    ) => {\r\n        let category_id = null;\r\n        let category_description = '';\r\n\r\n        if (description) {\r\n            const categoryObject = categories.find((category) => category.description === description);\r\n\r\n            if (categoryObject !== undefined && categoryObject.id) {\r\n                category_id = categoryObject.id;\r\n                category_description = categoryObject.description;\r\n            }\r\n        }\r\n\r\n        setSelectedItem({\r\n            ...selectedItem,\r\n            category_id,\r\n            category_description\r\n        });\r\n    };\r\n\r\n    const renderAddDialogForm = () => (\r\n        <>\r\n            <TextField\r\n                autoFocus\r\n                fullWidth\r\n                classes={{ root: 'of-white' }}\r\n                id=\"description\"\r\n                label=\"Nome\"\r\n                type=\"text\"\r\n                onChange={onDescriptionChange}\r\n            />\r\n            <div className=\"min-padding\">\r\n                <Autocomplete\r\n                    options={categories}\r\n                    title=\"Categoria\"\r\n                    onChange={onCategoryChange}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <FormDialog\r\n            isEnable={selectedItem.description !== '' && selectedItem.category_id !== null}\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onConfirm={() => onConfirm(selectedItem)}\r\n            title='Adicionar Novo Produto'\r\n        >\r\n            {renderAddDialogForm()}\r\n        </FormDialog>\r\n    );\r\n};\r\n\r\nexport default AddProductModal;\r\n","D:\\workspace\\shopping-app\\src\\sections\\products_section\\list\\components\\delete_product_modal.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\places_section\\categories_list\\categories_list.tsx",[],"D:\\workspace\\shopping-app\\src\\services\\utilities.js",[],"D:\\workspace\\shopping-app\\src\\sections\\products_section\\categories_list\\categories_list.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\products_section\\list\\products.tsx",[],"D:\\workspace\\shopping-app\\src\\components\\search_input\\search_input.tsx",[],"D:\\workspace\\shopping-app\\src\\store\\product\\reducer.ts",[],"D:\\workspace\\shopping-app\\src\\store\\product\\selector.ts",[],"D:\\workspace\\shopping-app\\src\\store\\product\\actions.ts",[],"D:\\workspace\\shopping-app\\src\\constants\\objectInterfaces.tsx",[],"D:\\workspace\\shopping-app\\src\\store\\shopping_list\\selector.ts",[],"D:\\workspace\\shopping-app\\src\\store\\brand\\reducer.ts",[],"D:\\workspace\\shopping-app\\src\\store\\brand\\actions.ts",[],"D:\\workspace\\shopping-app\\src\\store\\brand\\selector.ts",[],"D:\\workspace\\shopping-app\\src\\store\\place\\actions.ts",[],"D:\\workspace\\shopping-app\\src\\store\\place\\reducer.ts",[],"D:\\workspace\\shopping-app\\src\\store\\place\\selector.ts",[],"D:\\workspace\\shopping-app\\src\\components\\separator\\separator.tsx",[],"D:\\workspace\\shopping-app\\src\\components\\loading\\loading.tsx",[],{"ruleId":"325","replacedBy":"326"},{"ruleId":"327","replacedBy":"328"},{"ruleId":"325","replacedBy":"326"},{"ruleId":"327","replacedBy":"328"},{"ruleId":"329","severity":1,"message":"330","line":7,"column":25,"nodeType":"331","messageId":"332","endLine":7,"endColumn":28,"suggestions":"333"},{"ruleId":"329","severity":1,"message":"330","line":7,"column":33,"nodeType":"331","messageId":"332","endLine":7,"endColumn":36,"suggestions":"334"},{"ruleId":"329","severity":1,"message":"330","line":24,"column":32,"nodeType":"331","messageId":"332","endLine":24,"endColumn":35,"suggestions":"335"},{"ruleId":"329","severity":1,"message":"330","line":15,"column":23,"nodeType":"331","messageId":"332","endLine":15,"endColumn":26,"suggestions":"336"},{"ruleId":"329","severity":1,"message":"330","line":41,"column":29,"nodeType":"331","messageId":"332","endLine":41,"endColumn":32,"suggestions":"337"},{"ruleId":"329","severity":1,"message":"330","line":29,"column":19,"nodeType":"331","messageId":"332","endLine":29,"endColumn":22,"suggestions":"338"},{"ruleId":"329","severity":1,"message":"330","line":35,"column":39,"nodeType":"331","messageId":"332","endLine":35,"endColumn":42,"suggestions":"339"},{"ruleId":"329","severity":1,"message":"330","line":36,"column":35,"nodeType":"331","messageId":"332","endLine":36,"endColumn":38,"suggestions":"340"},{"ruleId":"329","severity":1,"message":"330","line":37,"column":40,"nodeType":"331","messageId":"332","endLine":37,"endColumn":43,"suggestions":"341"},{"ruleId":"329","severity":1,"message":"330","line":58,"column":34,"nodeType":"331","messageId":"332","endLine":58,"endColumn":37,"suggestions":"342"},{"ruleId":"329","severity":1,"message":"330","line":78,"column":30,"nodeType":"331","messageId":"332","endLine":78,"endColumn":33,"suggestions":"343"},{"ruleId":"344","severity":1,"message":"345","line":1,"column":8,"nodeType":"346","messageId":"347","endLine":1,"endColumn":13},{"ruleId":"344","severity":1,"message":"345","line":1,"column":8,"nodeType":"346","messageId":"347","endLine":1,"endColumn":13},{"ruleId":"329","severity":1,"message":"330","line":85,"column":42,"nodeType":"331","messageId":"332","endLine":85,"endColumn":45,"suggestions":"348"},{"ruleId":"329","severity":1,"message":"330","line":112,"column":46,"nodeType":"331","messageId":"332","endLine":112,"endColumn":49,"suggestions":"349"},{"ruleId":"350","severity":1,"message":"351","line":40,"column":26,"nodeType":"352","messageId":"353","endLine":40,"endColumn":28},{"ruleId":"350","severity":1,"message":"351","line":45,"column":26,"nodeType":"352","messageId":"353","endLine":45,"endColumn":28},{"ruleId":"329","severity":1,"message":"330","line":20,"column":41,"nodeType":"331","messageId":"332","endLine":20,"endColumn":44,"suggestions":"354"},{"ruleId":"329","severity":1,"message":"330","line":11,"column":25,"nodeType":"331","messageId":"332","endLine":11,"endColumn":28,"suggestions":"355"},{"ruleId":"329","severity":1,"message":"330","line":9,"column":25,"nodeType":"331","messageId":"332","endLine":9,"endColumn":28,"suggestions":"356"},{"ruleId":"329","severity":1,"message":"330","line":19,"column":41,"nodeType":"331","messageId":"332","endLine":19,"endColumn":44,"suggestions":"357"},{"ruleId":"329","severity":1,"message":"330","line":41,"column":41,"nodeType":"331","messageId":"332","endLine":41,"endColumn":44,"suggestions":"358"},{"ruleId":"329","severity":1,"message":"330","line":57,"column":22,"nodeType":"331","messageId":"332","endLine":57,"endColumn":25,"suggestions":"359"},{"ruleId":"329","severity":1,"message":"330","line":43,"column":41,"nodeType":"331","messageId":"332","endLine":43,"endColumn":44,"suggestions":"360"},{"ruleId":"329","severity":1,"message":"330","line":51,"column":22,"nodeType":"331","messageId":"332","endLine":51,"endColumn":25,"suggestions":"361"},"no-native-reassign",["362"],"no-negated-in-lhs",["363"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["364","365"],["366","367"],["368","369"],["370","371"],["372","373"],["374","375"],["376","377"],["378","379"],["380","381"],["382","383"],["384","385"],"no-use-before-define","'React' was used before it was defined.","Identifier","usedBeforeDefined",["386","387"],["388","389"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["390","391"],["392","393"],["394","395"],["396","397"],["398","399"],["400","401"],["402","403"],["404","405"],"no-global-assign","no-unsafe-negation",{"messageId":"406","fix":"407","desc":"408"},{"messageId":"409","fix":"410","desc":"411"},{"messageId":"406","fix":"412","desc":"408"},{"messageId":"409","fix":"413","desc":"411"},{"messageId":"406","fix":"414","desc":"408"},{"messageId":"409","fix":"415","desc":"411"},{"messageId":"406","fix":"416","desc":"408"},{"messageId":"409","fix":"417","desc":"411"},{"messageId":"406","fix":"418","desc":"408"},{"messageId":"409","fix":"419","desc":"411"},{"messageId":"406","fix":"420","desc":"408"},{"messageId":"409","fix":"421","desc":"411"},{"messageId":"406","fix":"422","desc":"408"},{"messageId":"409","fix":"423","desc":"411"},{"messageId":"406","fix":"424","desc":"408"},{"messageId":"409","fix":"425","desc":"411"},{"messageId":"406","fix":"426","desc":"408"},{"messageId":"409","fix":"427","desc":"411"},{"messageId":"406","fix":"428","desc":"408"},{"messageId":"409","fix":"429","desc":"411"},{"messageId":"406","fix":"430","desc":"408"},{"messageId":"409","fix":"431","desc":"411"},{"messageId":"406","fix":"432","desc":"408"},{"messageId":"409","fix":"433","desc":"411"},{"messageId":"406","fix":"434","desc":"408"},{"messageId":"409","fix":"435","desc":"411"},{"messageId":"406","fix":"436","desc":"408"},{"messageId":"409","fix":"437","desc":"411"},{"messageId":"406","fix":"438","desc":"408"},{"messageId":"409","fix":"439","desc":"411"},{"messageId":"406","fix":"440","desc":"408"},{"messageId":"409","fix":"441","desc":"411"},{"messageId":"406","fix":"442","desc":"408"},{"messageId":"409","fix":"443","desc":"411"},{"messageId":"406","fix":"444","desc":"408"},{"messageId":"409","fix":"445","desc":"411"},{"messageId":"406","fix":"446","desc":"408"},{"messageId":"409","fix":"447","desc":"411"},{"messageId":"406","fix":"448","desc":"408"},{"messageId":"409","fix":"449","desc":"411"},{"messageId":"406","fix":"450","desc":"408"},{"messageId":"409","fix":"451","desc":"411"},"suggestUnknown",{"range":"452","text":"453"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"452","text":"454"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"455","text":"453"},{"range":"455","text":"454"},{"range":"456","text":"453"},{"range":"456","text":"454"},{"range":"457","text":"453"},{"range":"457","text":"454"},{"range":"458","text":"453"},{"range":"458","text":"454"},{"range":"459","text":"453"},{"range":"459","text":"454"},{"range":"460","text":"453"},{"range":"460","text":"454"},{"range":"461","text":"453"},{"range":"461","text":"454"},{"range":"462","text":"453"},{"range":"462","text":"454"},{"range":"463","text":"453"},{"range":"463","text":"454"},{"range":"464","text":"453"},{"range":"464","text":"454"},{"range":"465","text":"453"},{"range":"465","text":"454"},{"range":"466","text":"453"},{"range":"466","text":"454"},{"range":"467","text":"453"},{"range":"467","text":"454"},{"range":"468","text":"453"},{"range":"468","text":"454"},{"range":"469","text":"453"},{"range":"469","text":"454"},{"range":"470","text":"453"},{"range":"470","text":"454"},{"range":"471","text":"453"},{"range":"471","text":"454"},{"range":"472","text":"453"},{"range":"472","text":"454"},{"range":"473","text":"453"},{"range":"473","text":"454"},{"range":"474","text":"453"},{"range":"474","text":"454"},[204,207],"unknown","never",[212,215],[646,649],[363,366],[1036,1039],[525,528],[722,725],[772,775],[827,830],[1339,1342],[1995,1998],[2520,2523],[3800,3803],[482,485],[324,327],[234,237],[449,452],[1029,1032],[1531,1534],[1110,1113],[1299,1302]]