[{"D:\\workspace\\shopping-app\\src\\index.tsx":"1","D:\\workspace\\shopping-app\\src\\serviceWorker.ts":"2","D:\\workspace\\shopping-app\\src\\store\\main\\reducer.js":"3","D:\\workspace\\shopping-app\\src\\components\\index.ts":"4","D:\\workspace\\shopping-app\\src\\sections\\index.ts":"5","D:\\workspace\\shopping-app\\src\\store\\shopping_list\\reducer.ts":"6","D:\\workspace\\shopping-app\\src\\store\\purchase\\reducer.ts":"7","D:\\workspace\\shopping-app\\src\\constants\\routes.jsx":"8","D:\\workspace\\shopping-app\\src\\store\\actionTypes.js":"9","D:\\workspace\\shopping-app\\src\\utils\\utils.ts":"10","D:\\workspace\\shopping-app\\src\\components\\dialogs\\confirmation_dialog.tsx":"11","D:\\workspace\\shopping-app\\src\\components\\autocomplete\\autocomplete.tsx":"12","D:\\workspace\\shopping-app\\src\\components\\dialogs\\form_dialog.tsx":"13","D:\\workspace\\shopping-app\\src\\components\\datepicker\\datepicker.tsx":"14","D:\\workspace\\shopping-app\\src\\components\\section_cards\\section_cards.tsx":"15","D:\\workspace\\shopping-app\\src\\components\\notification\\notification.tsx":"16","D:\\workspace\\shopping-app\\src\\components\\table\\table.tsx":"17","D:\\workspace\\shopping-app\\src\\sections\\categories\\categories.tsx":"18","D:\\workspace\\shopping-app\\src\\sections\\brands\\brands.tsx":"19","D:\\workspace\\shopping-app\\src\\sections\\menu\\menu.tsx":"20","D:\\workspace\\shopping-app\\src\\sections\\sidebar_list\\sidebar_list.tsx":"21","D:\\workspace\\shopping-app\\src\\sections\\purchases_section\\list\\list.tsx":"22","D:\\workspace\\shopping-app\\src\\sections\\purchases_section\\purchases_section.tsx":"23","D:\\workspace\\shopping-app\\src\\sections\\purchases_section\\shopping_list\\shopping_list.tsx":"24","D:\\workspace\\shopping-app\\src\\sections\\places_section\\places_section.tsx":"25","D:\\workspace\\shopping-app\\src\\components\\error_dialog\\error_dialog.jsx":"26","D:\\workspace\\shopping-app\\src\\components\\loading\\loading.jsx":"27","D:\\workspace\\shopping-app\\src\\components\\dropdown\\dropdown.jsx":"28","D:\\workspace\\shopping-app\\src\\components\\separator\\separator.jsx":"29","D:\\workspace\\shopping-app\\src\\store\\main\\selector.js":"30","D:\\workspace\\shopping-app\\src\\services\\dataGetters.js":"31","D:\\workspace\\shopping-app\\src\\services\\dataDeleters.js":"32","D:\\workspace\\shopping-app\\src\\services\\dataSetters.js":"33","D:\\workspace\\shopping-app\\src\\store\\purchase\\actions.ts":"34","D:\\workspace\\shopping-app\\src\\store\\shopping_list\\actions.ts":"35","D:\\workspace\\shopping-app\\src\\store\\purchase\\selector.ts":"36","D:\\workspace\\shopping-app\\src\\constants\\general.tsx":"37","D:\\workspace\\shopping-app\\src\\sections\\purchases_section\\list\\components\\total_purchase_card.tsx":"38","D:\\workspace\\shopping-app\\src\\sections\\purchases_section\\list\\components\\purchase_card.tsx":"39","D:\\workspace\\shopping-app\\src\\constants\\products.jsx":"40","D:\\workspace\\shopping-app\\src\\utils\\fontAwesomeIconMapper.jsx":"41","D:\\workspace\\shopping-app\\src\\store\\main\\actions.ts":"42","D:\\workspace\\shopping-app\\src\\constants\\places.jsx":"43","D:\\workspace\\shopping-app\\src\\sections\\brands\\components\\delete_brand_modal.tsx":"44","D:\\workspace\\shopping-app\\src\\sections\\brands\\components\\add_brand_modal.tsx":"45","D:\\workspace\\shopping-app\\src\\sections\\categories\\components\\delete_category_modal.tsx":"46","D:\\workspace\\shopping-app\\src\\sections\\categories\\components\\add_category_modal.tsx":"47","D:\\workspace\\shopping-app\\src\\constants\\objectModels.tsx":"48","D:\\workspace\\shopping-app\\src\\sections\\products_section\\products_section.tsx":"49","D:\\workspace\\shopping-app\\src\\sections\\places_section\\list\\places.tsx":"50","D:\\workspace\\shopping-app\\src\\sections\\places_section\\list\\components\\delete_place_modal.tsx":"51","D:\\workspace\\shopping-app\\src\\sections\\places_section\\list\\components\\add_place_modal.tsx":"52","D:\\workspace\\shopping-app\\src\\sections\\products_section\\list\\components\\add_product_modal.tsx":"53","D:\\workspace\\shopping-app\\src\\sections\\products_section\\list\\components\\delete_product_modal.tsx":"54","D:\\workspace\\shopping-app\\src\\sections\\places_section\\categories_list\\categories_list.tsx":"55","D:\\workspace\\shopping-app\\src\\services\\utilities.js":"56","D:\\workspace\\shopping-app\\src\\sections\\products_section\\categories_list\\categories_list.tsx":"57","D:\\workspace\\shopping-app\\src\\sections\\products_section\\list\\products.tsx":"58","D:\\workspace\\shopping-app\\src\\components\\search_input\\search_input.tsx":"59","D:\\workspace\\shopping-app\\src\\store\\product\\reducer.ts":"60","D:\\workspace\\shopping-app\\src\\store\\product\\selector.ts":"61","D:\\workspace\\shopping-app\\src\\store\\product\\actions.ts":"62","D:\\workspace\\shopping-app\\src\\constants\\objectInterfaces.tsx":"63","D:\\workspace\\shopping-app\\src\\store\\shopping_list\\selector.ts":"64","D:\\workspace\\shopping-app\\src\\store\\brand\\reducer.ts":"65","D:\\workspace\\shopping-app\\src\\store\\brand\\actions.ts":"66","D:\\workspace\\shopping-app\\src\\store\\brand\\selector.ts":"67"},{"size":6748,"mtime":1616606328680,"results":"68","hashOfConfig":"69"},{"size":4559,"mtime":1607469607040,"results":"70","hashOfConfig":"69"},{"size":4487,"mtime":1616611028785,"results":"71","hashOfConfig":"69"},{"size":789,"mtime":1616536812603,"results":"72","hashOfConfig":"69"},{"size":1005,"mtime":1616454944360,"results":"73","hashOfConfig":"69"},{"size":2169,"mtime":1616604292248,"results":"74","hashOfConfig":"69"},{"size":1599,"mtime":1616426312478,"results":"75","hashOfConfig":"69"},{"size":507,"mtime":1616414159364,"results":"76","hashOfConfig":"69"},{"size":7165,"mtime":1616606816962,"results":"77","hashOfConfig":"69"},{"size":588,"mtime":1616537198944,"results":"78","hashOfConfig":"69"},{"size":1748,"mtime":1606847028534,"results":"79","hashOfConfig":"69"},{"size":1246,"mtime":1616535235040,"results":"80","hashOfConfig":"69"},{"size":1321,"mtime":1616523510411,"results":"81","hashOfConfig":"69"},{"size":1048,"mtime":1608475585630,"results":"82","hashOfConfig":"69"},{"size":658,"mtime":1616364085573,"results":"83","hashOfConfig":"69"},{"size":1691,"mtime":1607370077597,"results":"84","hashOfConfig":"69"},{"size":6685,"mtime":1616535078631,"results":"85","hashOfConfig":"69"},{"size":2645,"mtime":1616455697085,"results":"86","hashOfConfig":"69"},{"size":5499,"mtime":1616610559119,"results":"87","hashOfConfig":"69"},{"size":3068,"mtime":1616414165755,"results":"88","hashOfConfig":"69"},{"size":2704,"mtime":1616604356669,"results":"89","hashOfConfig":"69"},{"size":4933,"mtime":1616455531253,"results":"90","hashOfConfig":"69"},{"size":685,"mtime":1616497991041,"results":"91","hashOfConfig":"69"},{"size":3441,"mtime":1616604104107,"results":"92","hashOfConfig":"69"},{"size":546,"mtime":1616414306096,"results":"93","hashOfConfig":"69"},{"size":1717,"mtime":1605356289372,"results":"94","hashOfConfig":"69"},{"size":706,"mtime":1605356289373,"results":"95","hashOfConfig":"69"},{"size":1143,"mtime":1605356289373,"results":"96","hashOfConfig":"69"},{"size":206,"mtime":1605356289373,"results":"97","hashOfConfig":"69"},{"size":1024,"mtime":1616591809783,"results":"98","hashOfConfig":"69"},{"size":899,"mtime":1616602987064,"results":"99","hashOfConfig":"69"},{"size":764,"mtime":1616595669065,"results":"100","hashOfConfig":"69"},{"size":7439,"mtime":1616597999097,"results":"101","hashOfConfig":"69"},{"size":1466,"mtime":1616455868036,"results":"102","hashOfConfig":"69"},{"size":3144,"mtime":1616605239445,"results":"103","hashOfConfig":"69"},{"size":549,"mtime":1607907058651,"results":"104","hashOfConfig":"69"},{"size":2100,"mtime":1616606557797,"results":"105","hashOfConfig":"69"},{"size":2053,"mtime":1616413719582,"results":"106","hashOfConfig":"69"},{"size":5698,"mtime":1616535294772,"results":"107","hashOfConfig":"69"},{"size":264,"mtime":1616422494839,"results":"108","hashOfConfig":"69"},{"size":1109,"mtime":1605356289377,"results":"109","hashOfConfig":"69"},{"size":5129,"mtime":1616599612804,"results":"110","hashOfConfig":"69"},{"size":177,"mtime":1605356289373,"results":"111","hashOfConfig":"69"},{"size":1024,"mtime":1606764508804,"results":"112","hashOfConfig":"69"},{"size":1289,"mtime":1616610545339,"results":"113","hashOfConfig":"69"},{"size":1079,"mtime":1606785157394,"results":"114","hashOfConfig":"69"},{"size":1212,"mtime":1616544291020,"results":"115","hashOfConfig":"69"},{"size":443,"mtime":1616424720519,"results":"116","hashOfConfig":"69"},{"size":552,"mtime":1616414312186,"results":"117","hashOfConfig":"69"},{"size":3312,"mtime":1616500666204,"results":"118","hashOfConfig":"69"},{"size":1347,"mtime":1616416203389,"results":"119","hashOfConfig":"69"},{"size":2770,"mtime":1616455752524,"results":"120","hashOfConfig":"69"},{"size":2791,"mtime":1616594665830,"results":"121","hashOfConfig":"69"},{"size":1343,"mtime":1616416489985,"results":"122","hashOfConfig":"69"},{"size":2086,"mtime":1616500643474,"results":"123","hashOfConfig":"69"},{"size":1480,"mtime":1616453903864,"results":"124","hashOfConfig":"69"},{"size":4382,"mtime":1616605593987,"results":"125","hashOfConfig":"69"},{"size":8033,"mtime":1616610285300,"results":"126","hashOfConfig":"69"},{"size":1047,"mtime":1616543366765,"results":"127","hashOfConfig":"69"},{"size":5280,"mtime":1616595616948,"results":"128","hashOfConfig":"69"},{"size":1354,"mtime":1616591714525,"results":"129","hashOfConfig":"69"},{"size":6873,"mtime":1616599551325,"results":"130","hashOfConfig":"69"},{"size":1507,"mtime":1616543168834,"results":"131","hashOfConfig":"69"},{"size":420,"mtime":1616597891115,"results":"132","hashOfConfig":"69"},{"size":2736,"mtime":1616608092263,"results":"133","hashOfConfig":"69"},{"size":3420,"mtime":1616607542636,"results":"134","hashOfConfig":"69"},{"size":799,"mtime":1616608542811,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yh2s65",{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"140"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"140"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"140"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"140"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"153"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"153"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"153"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"153"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"140"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"140"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"140"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"140"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"140"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"140"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"140"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"153"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\workspace\\shopping-app\\src\\index.tsx",[],"D:\\workspace\\shopping-app\\src\\serviceWorker.ts",[],["288","289"],"D:\\workspace\\shopping-app\\src\\store\\main\\reducer.js",[],"D:\\workspace\\shopping-app\\src\\components\\index.ts",[],"D:\\workspace\\shopping-app\\src\\sections\\index.ts",[],"D:\\workspace\\shopping-app\\src\\store\\shopping_list\\reducer.ts",[],"D:\\workspace\\shopping-app\\src\\store\\purchase\\reducer.ts",[],"D:\\workspace\\shopping-app\\src\\constants\\routes.jsx",[],["290","291"],"D:\\workspace\\shopping-app\\src\\store\\actionTypes.js",[],"D:\\workspace\\shopping-app\\src\\utils\\utils.ts",["292","293"],"export const dynamicSort = (property: string) => {\r\n    let sortOrder = 1;\r\n    if (property[0] === \"-\") {\r\n        sortOrder = -1;\r\n        property = property.substr(1);\r\n    }\r\n    return function (a: any, b: any) {\r\n        /* next line works with strings and numbers, \r\n         * and you may want to customize it to your needs\r\n         */\r\n        const result = a[property].localeCompare(b[property]);\r\n        return result * sortOrder;\r\n    }\r\n}\r\n\r\nexport const invertSort = (sort: string) => {\r\n    if (sort === 'ASC') {\r\n        return 'DESC';\r\n    }\r\n\r\n    return 'ASC';\r\n}\r\n","D:\\workspace\\shopping-app\\src\\components\\dialogs\\confirmation_dialog.tsx",[],"D:\\workspace\\shopping-app\\src\\components\\autocomplete\\autocomplete.tsx",["294","295"],"import React from 'react';\n\nimport MaterialAutocomplete from '@material-ui/lab/Autocomplete';\nimport { TextField } from '@material-ui/core/';\nimport { IAutocompleteItem } from './types';\n\ninterface IProps {\n    disabled?: boolean;\n    freeSolo?: boolean;\n    selected?: IAutocompleteItem | null;\n    options: IAutocompleteItem[];\n    onChange: (item: IAutocompleteItem) => void;\n    title?: string;\n}\n\nconst Autocomplete = ({\n    disabled = false,\n    freeSolo = false,\n    options,\n    selected = null,\n    title = 'Selecione uma opção',\n    onChange\n}: IProps) => {\n    const handleChange = (evt: any, object: any) => {\n        console.log(evt);\n        console.log(object);\n        onChange(object);\n    };\n\n    return (\n        <MaterialAutocomplete\n            disabled={disabled}\n            freeSolo={freeSolo}\n            options={options.map((option) => option.description)}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    label={title}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n            )}\n            style={{ flex: 1 }}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport default Autocomplete;\n","D:\\workspace\\shopping-app\\src\\components\\dialogs\\form_dialog.tsx",[],"D:\\workspace\\shopping-app\\src\\components\\datepicker\\datepicker.tsx",[],"D:\\workspace\\shopping-app\\src\\components\\section_cards\\section_cards.tsx",[],"D:\\workspace\\shopping-app\\src\\components\\notification\\notification.tsx",["296","297"],"import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n    errorMessage,\n    isNotificationOpen,\n    hasError,\n} from '../../store/main/selector';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nfunction Alert(props: any) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Notification = () => {\n    const dispatch = useDispatch();\n    const isErrorMessage = useSelector(hasError);\n    const isOpen = useSelector(isNotificationOpen);\n    const messageError = useSelector(errorMessage);\n\n    const toggleNotification = () => dispatch({\n        type: 'TOGGLE_NOTIFICATION',\n        status: false\n    });\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            width: '100%',\n            '& > * + *': {\n                marginTop: theme.spacing(2),\n            },\n        },\n    }));\n\n    const classes = useStyles();\n\n    const handleClose = (_: any, reason: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        toggleNotification();\n    };\n\n    const message = isErrorMessage\n        ? messageError\n        : 'Sua ação foi registrada com sucesso!';\n\n    const severity = isErrorMessage\n        ? 'error'\n        : 'success';\n\n    return (\n        <div className={classes.root}>\n            <Snackbar open={isOpen} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity={severity}>\n                    {message}\n                </Alert>\n            </Snackbar>\n        </div>\n    );\n};\n\nexport default Notification;\n","D:\\workspace\\shopping-app\\src\\components\\table\\table.tsx",["298","299","300","301","302","303","304"],"import React, { useState } from 'react';\n\nimport {\n    Checkbox,\n    IconButton\n} from '@material-ui/core';\n\nimport {\n    PlaylistAdd,\n    ArrowDropDown as ArrowDropDownIcon,\n    ArrowDropUp as ArrowDropUpIcon,\n    Delete as DeleteIcon,\n} from '@material-ui/icons';\n\nimport {\n    IProduct,\n    ISortingState\n} from 'constants/objectInterfaces';\n\ntype IHeaderColumn = {\n    key: string;\n    value: string;\n    sortable: boolean;\n}\n\ninterface IProps {\n    bodyColumns?: any[];\n    checkedProducts?: IProduct[];\n    color?: string;\n    headerColumns: IHeaderColumn[];\n    sortState?: ISortingState;\n    onCheckboxAction?: null | ((item: any) => void);\n    onMainAction?: null | ((item: any) => void);\n    onSecondaryAction?: null | ((item: any) => void);\n    onSortChange?: null | ((column: string, direction: string) => void);\n}\n\nconst defaultSortingState = {\n    orderBy: 'description',\n    sort: 'ASC'\n};\n\nconst Table = ({\n    bodyColumns = [],\n    color = 'green',\n    headerColumns,\n    sortState = defaultSortingState,\n    checkedProducts = [],\n    onCheckboxAction = null,\n    onMainAction = null,\n    onSecondaryAction = null,\n    onSortChange = null\n}: IProps) => {\n    // const [checkedProducts, setCheckedProducts] = useState<IProduct[]>([]);\n\n    const checkboxClick = (item: any) => {\n        if (onCheckboxAction === null) {\n            return;\n        }\n\n        let updatedCheckedProducts;\n        const index = checkedProducts.findIndex((product: IProduct) => product.id === item.id);\n        if (index === -1) {\n            updatedCheckedProducts = [\n                ...checkedProducts,\n                item\n            ];\n            // setCheckedProducts(updatedCheckedProducts);\n        } else {\n            const filteredProducts = checkedProducts.filter((product: IProduct) => item.id !== product.id);\n            updatedCheckedProducts = [...filteredProducts];\n            // setCheckedProducts(updatedCheckedProducts);\n        }\n\n        onCheckboxAction(updatedCheckedProducts);\n    };\n\n    const isChecked = (item: any) => (checkedProducts.findIndex((product: IProduct) => product.id === item.id) !== -1);\n\n    const setSortingState = (key: string) => {\n        let newDirection = 'ASC';\n        if (key === sortState.orderBy) {\n            newDirection = sortState.sort === 'ASC' ? 'DESC' : 'ASC';\n        }\n        // setSortState({ column: key, direction: newDirection });\n        if (onSortChange !== null) {\n            onSortChange(key, newDirection);\n        }\n    };\n\n    const renderSortIcon = (key: string) => {\n        if (onSortChange === null) {\n            return;\n        }\n\n        if (key !== sortState.orderBy) {\n            return <ArrowDropDownIcon classes={{ root: 'invisible' }} />;\n        }\n\n        if (sortState.sort === 'ASC') {\n            return <ArrowDropDownIcon classes={{ root: 'of-black' }} />;\n        }\n\n        return <ArrowDropUpIcon classes={{ root: 'of-black' }} />;\n    };\n\n    const renderHeader = () => {\n        const tableHeader = [...headerColumns];\n\n        if (onCheckboxAction !== null) {\n            tableHeader.unshift({\n                key: 'onCheckboxAction',\n                value: '',\n                sortable: false\n            });\n        }\n        if (onMainAction !== null) {\n            tableHeader.unshift({\n                key: 'onMainAction',\n                value: '',\n                sortable: false\n            });\n        }\n        if (onSecondaryAction !== null) {\n            tableHeader.push({\n                key: 'onSecondaryAction',\n                value: '',\n                sortable: false\n            });\n        }\n\n        const renderHeaderValue = (header: IHeaderColumn) => {\n            if (header.sortable) {\n                return (\n                    <p\n                        className=\"right-padding-s margin-none clickable\"\n                        onClick={() => setSortingState(header.key)}\n                    >\n                        {header.value}\n                    </p>\n                )\n            }\n\n            return (<p className=\"right-padding-s margin-none\">{header.value}</p>);\n        };\n\n        return tableHeader.map((header) => {\n            return (\n                <th key={header.key}>\n                    <div className=\"vertical-align-center\">\n                        {renderHeaderValue(header)}\n                        {renderSortIcon(header.key)}\n                    </div>\n                </th>\n            );\n        });\n    };\n\n    const renderBody = () => {\n        // .sort((a, b) => a.description.localeCompare(b.description))\n        return bodyColumns\n            .map((item) => {\n                return (\n                    <tr key={item.id} className={isChecked(item) ? 'checked' : ''}>\n                        {onCheckboxAction !== null\n                            && <td>\n                                <Checkbox\n                                    checked={isChecked(item)}\n                                    size=\"small\"\n                                    inputProps={{ 'aria-label': 'checkbox with small size' }}\n                                    onClick={() => checkboxClick(item)}\n                                />\n                            </td>\n                        }\n                        {onMainAction !== null\n                            && <td><IconButton\n                                aria-label=\"add\"\n                                onClick={() => onMainAction(item)}\n                            >\n                                <PlaylistAdd classes={{ root: 'of-green' }} />\n                            </IconButton></td>\n                        }\n                        {item.category_id && <td className=\"of-white\">{item.category_description}</td>}\n                        <td>{item.description}</td>\n\n                        {onSecondaryAction !== null\n                            && <td className=\"align-right\">\n                                <IconButton\n                                    aria-label=\"delete\"\n                                    onClick={() => onSecondaryAction(item)}\n                                >\n                                    <DeleteIcon classes={{ root: 'of-red' }} />\n                                </IconButton>\n                            </td>\n                        }\n                    </tr>\n                );\n            });\n    };\n\n    return (\n        <table className=\"table\">\n            <thead className={`of-${color}-bg`}>\n                <tr>\n                    {renderHeader()}\n                </tr>\n            </thead>\n            <tbody>\n                {renderBody()}\n            </tbody>\n        </table>\n    );\n};\n\nexport default Table;\n","D:\\workspace\\shopping-app\\src\\sections\\categories\\categories.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\brands\\brands.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\menu\\menu.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\sidebar_list\\sidebar_list.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\purchases_section\\list\\list.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\purchases_section\\purchases_section.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\purchases_section\\shopping_list\\shopping_list.tsx",["305"],"D:\\workspace\\shopping-app\\src\\sections\\places_section\\places_section.tsx",[],"D:\\workspace\\shopping-app\\src\\components\\error_dialog\\error_dialog.jsx",["306"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport class ErrorDialog extends Component {\n    render() {\n        const { errorMessage, error, onClose } = this.props;\n\n        return (\n            <Dialog\n                open={error}\n                onClose={onClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">Erro</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {errorMessage}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        autoFocus\n                        disableElevation\n                        classes={{ root: 'flex-grow' }}\n                        color=\"secondary\"\n                        onClick={onClose}\n                    >\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\nErrorDialog.propTypes = {\n    error: PropTypes.bool.isRequired,\n    errorMessage: PropTypes.string,\n    onClose: PropTypes.func.isRequired,\n};\n\nErrorDialog.defaultProps = {\n    errorMessage: 'Error',\n};\n\nexport default ErrorDialog;\n","D:\\workspace\\shopping-app\\src\\components\\loading\\loading.jsx",["307"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../../img/loader.gif';\n\nexport class Loading extends Component {\n    render() {\n        const { fullscreen, text } = this.props;\n\n        return (\n            <div className={fullscreen ? 'loading--fullscreen' : 'loading'}>\n                <img className=\"loading--spinner\" src={Spinner} alt=\"loading spinner\" />\n                <h2 className=\"of-lightgrey small-caps\">{text}</h2>\n            </div>\n        );\n    }\n}\n\nLoading.propTypes = {\n    fullscreen: PropTypes.bool,\n    text: PropTypes.string,\n};\n\nLoading.defaultProps = {\n    fullscreen: false,\n    text: \"Loading...\",\n};\n\nexport default Loading;\n","D:\\workspace\\shopping-app\\src\\components\\dropdown\\dropdown.jsx",["308"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass Dropdown extends React.Component {\n    renderOptions() {\n        const { options } = this.props;\n\n        return options.map((option) => (\n            <option className=\"dropdown--option\" key={option.id} value={option.name}>{option.name}</option>\n        ));\n    }\n\n    render() {\n        const { title } = this.props;\n\n        return (\n            <select\n                className=\"dropdown--select\"\n                defaultValue=\"\"\n                id={title}\n                name={title}\n            >\n                <option\n                    className=\"dropdown--option\"\n                    disabled\n                    value=\"\"\n                >\n                    {title}\n                </option>\n                {this.renderOptions()}\n            </select>\n        );\n    }\n}\n\nDropdown.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n    })),\n    title: PropTypes.string,\n};\n\nDropdown.defaultProps = {\n    options: [],\n    title: 'Selecione uma opção',\n};\n\nexport default Dropdown;\n","D:\\workspace\\shopping-app\\src\\components\\separator\\separator.jsx",["309"],"import React, { Component } from 'react';\n\nexport class Separator extends Component {\n    render() {\n        return (\n            <div className=\"separator\" />\n        );\n    }\n}\n\nexport default Separator;\n","D:\\workspace\\shopping-app\\src\\store\\main\\selector.js",[],"D:\\workspace\\shopping-app\\src\\services\\dataGetters.js",[],"D:\\workspace\\shopping-app\\src\\services\\dataDeleters.js",[],"D:\\workspace\\shopping-app\\src\\services\\dataSetters.js",[],"D:\\workspace\\shopping-app\\src\\store\\purchase\\actions.ts",[],"D:\\workspace\\shopping-app\\src\\store\\shopping_list\\actions.ts",[],"D:\\workspace\\shopping-app\\src\\store\\purchase\\selector.ts",[],"D:\\workspace\\shopping-app\\src\\constants\\general.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\purchases_section\\list\\components\\total_purchase_card.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\purchases_section\\list\\components\\purchase_card.tsx",["310","311"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Checkbox,\r\n    IconButton,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport { Remove as RemoveIcon } from '@material-ui/icons';\r\n\r\nimport { Autocomplete } from 'components/index';\r\n\r\nimport { returnItems } from 'store/main/selector';\r\nimport { getBrands } from 'store/main/actions';\r\nimport { objectTypes } from 'constants/general';\r\nimport styles from './purchase_card.module.scss';\r\n\r\nimport {\r\n    IBrand,\r\n    IPurchaseItem\r\n} from 'constants/objectInterfaces';\r\n\r\nimport { productUnits } from 'constants/products';\r\n\r\ninterface IProps {\r\n    item: IPurchaseItem\r\n    onDelete: (item: IPurchaseItem) => void;\r\n    onUpdate: (item: IPurchaseItem) => void;\r\n}\r\n\r\nconst PurchaseCard = ({\r\n    item,\r\n    onDelete,\r\n    onUpdate\r\n}: IProps) => {\r\n    const [itemInfo, setItemInfo] = useState(item);\r\n    const [currentUnit, setCurrentUnit] = useState(productUnits[0]);\r\n    const dispatch = useDispatch();\r\n\r\n    const brands: IBrand[] = useSelector((state) => returnItems(state, objectTypes.brands));\r\n\r\n    useEffect(() => {\r\n        if (brands.length === 0) {\r\n            dispatch(getBrands())\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        onUpdate(itemInfo);\r\n        setCurrentUnit(productUnits.find((unit) => unit.id === itemInfo.unit) || productUnits[0]);\r\n    }, [itemInfo]);\r\n\r\n    const cardClass = classNames(\r\n        [styles.card], {\r\n        [styles.greenBorder]: itemInfo.total_price > 0\r\n    });\r\n\r\n    return (\r\n        <Card className={cardClass}>\r\n            <CardContent>\r\n                <CardHeader\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"settings\"\r\n                            onClick={() => onDelete(item)}\r\n                        >\r\n                            <RemoveIcon classes={{ root: 'of-red' }} />\r\n                        </IconButton>\r\n                    }\r\n                    classes={{\r\n                        title: styles.title,\r\n                        subheader: styles.subtitle\r\n                    }}\r\n                    title={item.description}\r\n                    subheader={item.category_description}\r\n                />\r\n                <div className={styles.cardElementContainer}>\r\n                    <Autocomplete\r\n                        options={brands}\r\n                        title=\"Marca\"\r\n                        onChange={(item: any) => setItemInfo({\r\n                            ...itemInfo,\r\n                            brand_description: item ? item.description : '',\r\n                            brand_id: item ? item.id : null\r\n                        })}\r\n                    />\r\n                </div>\r\n                <div className={styles.cardElementContainer}>\r\n                    <div className={styles.cardElement}>\r\n                        <TextField\r\n                            required\r\n                            id=\"price\"\r\n                            InputProps={{ inputProps: { min: 0 } }}\r\n                            label=\"Qtd\"\r\n                            type=\"number\"\r\n                            value={itemInfo.quantity}\r\n                            onChange={(e) => setItemInfo({\r\n                                ...itemInfo,\r\n                                quantity: parseFloat(e.target.value)\r\n                            })}\r\n                        />\r\n                    </div>\r\n                    <div className={styles.cardElement}>\r\n                        <Autocomplete\r\n                            options={productUnits}\r\n                            selected={currentUnit}\r\n                            title=\"Unidade\"\r\n                            onChange={(item: any) => {\r\n                                setItemInfo({\r\n                                    ...itemInfo,\r\n                                    unit: item.id\r\n                                })\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className={styles.cardElementContainer}>\r\n                    <div className={styles.cardElement}>\r\n                        <TextField\r\n                            required\r\n                            id=\"price\"\r\n                            InputProps={{ inputProps: { min: 0 } }}\r\n                            label={`€/${currentUnit.description}`}\r\n                            type=\"number\"\r\n                            value={itemInfo.price}\r\n                            onChange={(e) => setItemInfo({\r\n                                ...itemInfo,\r\n                                price: parseFloat(e.target.value),\r\n                            })}\r\n                        />\r\n                    </div>\r\n                    <div className={`${styles.cardElement} ${styles.flexCenter}`}>\r\n                        Promo?\r\n                        <Checkbox\r\n                            size=\"small\"\r\n                            inputProps={{ 'aria-label': 'checkbox with small size' }}\r\n                            onChange={(e) => setItemInfo({\r\n                                ...itemInfo,\r\n                                promotion: e.target.checked\r\n                            })}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n            <CardActions className={styles.footer}>\r\n                €{itemInfo.total_price}\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default PurchaseCard;\r\n","D:\\workspace\\shopping-app\\src\\constants\\products.jsx",[],"D:\\workspace\\shopping-app\\src\\utils\\fontAwesomeIconMapper.jsx",["312","313"],"D:\\workspace\\shopping-app\\src\\store\\main\\actions.ts",[],"D:\\workspace\\shopping-app\\src\\constants\\places.jsx",[],"D:\\workspace\\shopping-app\\src\\sections\\brands\\components\\delete_brand_modal.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\brands\\components\\add_brand_modal.tsx",["314"],"D:\\workspace\\shopping-app\\src\\sections\\categories\\components\\delete_category_modal.tsx",["315"],"import React from 'react';\n\nimport { TextField } from '@material-ui/core';\nimport { ICategory } from '../../../constants/objectInterfaces';\n\nimport ConfirmationDialog from '../../../components/dialogs/confirmation_dialog';\n\ninterface IProps {\n    category: ICategory | null;\n    onClose: () => void;\n    onConfirm: (object: any) => void;\n}\n\nconst DeleteCategoryModal = ({\n    onClose,\n    onConfirm,\n    category\n}: IProps) => {\n    const renderContent = () => {\n        return (\n            <>\n                <TextField\n                    disabled\n                    fullWidth\n                    id=\"description\"\n                    label=\"Nome\"\n                    type=\"text\"\n                    value={category?.description}\n                />\n            </>\n        );\n    };\n\n    return (\n        <ConfirmationDialog\n            open={category !== null}\n            onClose={onClose}\n            onConfirm={() => onConfirm(category)}\n            title='Remover Categoria'\n            content={renderContent()}\n        />\n    );\n};\n\nexport default DeleteCategoryModal;\n","D:\\workspace\\shopping-app\\src\\sections\\categories\\components\\add_category_modal.tsx",["316","317","318","319"],"import React, { useState } from 'react';\n\nimport { TextField } from '@material-ui/core';\nimport { FormDialog } from '../../../components/index';\nimport {\n    category as categoryModel\n} from '../../../constants/objectModels';\n\nimport { ICategory } from '../../../constants/objectInterfaces';\n\ninterface IProps {\n    isOpen: boolean;\n    onClose: () => void;\n    onConfirm: (object: any) => void;\n}\n\nconst AddCategoryModal = ({\n    isOpen,\n    onClose,\n    onConfirm\n}: IProps) => {\n    const [newCategory, setNewCategory] = useState<string>('');\n\n    const onDescriptionChange = (event: any) => {\n        const value = event.target.value;\n        setNewCategory(value);\n    };\n\n    return (\n        <FormDialog\n            isEnable={newCategory !== ''}\n            isOpen={isOpen}\n            onClose={onClose}\n            onConfirm={() => onConfirm(newCategory)}\n            title='Adicionar Nova Categoria'\n        >\n            <TextField\n                autoFocus\n                fullWidth\n                id=\"description\"\n                label=\"Nome\"\n                type=\"text\"\n                onChange={onDescriptionChange}\n            />\n        </FormDialog>\n    );\n};\n\nexport default AddCategoryModal;\n","D:\\workspace\\shopping-app\\src\\constants\\objectModels.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\products_section\\products_section.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\places_section\\list\\places.tsx",["320"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// Actions\r\nimport { getPlaces, removeFromList } from 'store/main/actions';\r\nimport { setItem } from 'services/dataSetters';\r\nimport deleteItem from 'services/dataDeleters';\r\n\r\n// Selectors\r\nimport { isLoading, returnItems } from 'store/main/selector';\r\n\r\n// Components\r\nimport { Fab } from '@material-ui/core';\r\nimport { AddCircle as AddIcon } from '@material-ui/icons';\r\nimport { Loading, Table } from 'components/index';\r\nimport AddPlaceModal from './components/add_place_modal';\r\nimport DeletePlaceModal from './components/delete_place_modal';\r\n\r\nimport { objectTypes } from 'constants/general';\r\nimport { IPlace } from 'constants/objectInterfaces';\r\n\r\nconst PlacesList = () => {\r\n    const [currentPage, setCurrentPage] = useState<number>(0);\r\n    const [isAddPlaceOpen, setIsAddPlaceOpen] = useState(false);\r\n    const [toBeDeleted, setToBeDeleted] = useState<IPlace | null>(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const places: IPlace[] = useSelector((state) => returnItems(state, objectTypes.places));\r\n    const isPlacesLoading: boolean = useSelector(isLoading);\r\n\r\n    useEffect(() => {\r\n        dispatch(getPlaces(currentPage));\r\n    }, []);\r\n\r\n    const headers = [\r\n        {\r\n            key: 'category_description',\r\n            value: 'Categoria',\r\n            sortable: true\r\n        },\r\n        {\r\n            key: 'description',\r\n            value: 'Lugar',\r\n            sortable: true\r\n        }\r\n    ];\r\n\r\n    const deletePlace = () => {\r\n        if (toBeDeleted) {\r\n            dispatch(deleteItem(toBeDeleted.id, objectTypes.places));\r\n            dispatch(removeFromList(toBeDeleted, objectTypes.places));\r\n        }\r\n        setToBeDeleted(null);\r\n    }\r\n\r\n    const addNewPlace = (product: IPlace) => {\r\n        dispatch(setItem([product], objectTypes.places));\r\n        setIsAddPlaceOpen(false);\r\n    };\r\n\r\n    const onSortChange = (column: string, direction: string) => {\r\n        console.log('Sorting by: ' + column + direction);\r\n        dispatch(getPlaces(currentPage, column, direction));        \r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Fab\r\n                classes={{root: 'of-yellow-bg'}}\r\n                className=\"fab-bottom\"\r\n                size=\"large\"\r\n                variant=\"extended\"\r\n                onClick={() => setIsAddPlaceOpen(true)}\r\n            >\r\n                <AddIcon />&nbsp;\r\n                Novo lugar\r\n            </Fab>\r\n            <Table\r\n                bodyColumns={places}\r\n                color=\"yellow\"\r\n                headerColumns={headers}\r\n                onSecondaryAction={(product: IPlace) => setToBeDeleted(product)}\r\n                onSortChange={(column: string, direction: string) => onSortChange(column, direction)}\r\n            />\r\n            {isPlacesLoading && <Loading />}\r\n            <AddPlaceModal\r\n                isOpen={isAddPlaceOpen}\r\n                onClose={() => setIsAddPlaceOpen(false)}\r\n                onConfirm={addNewPlace}\r\n            />\r\n            <DeletePlaceModal\r\n                place={toBeDeleted}\r\n                onClose={() => setToBeDeleted(null)}\r\n                onConfirm={deletePlace}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlacesList;\r\n","D:\\workspace\\shopping-app\\src\\sections\\places_section\\list\\components\\delete_place_modal.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\places_section\\list\\components\\add_place_modal.tsx",["321","322","323"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Actions\nimport { getPlacesCategories } from 'store/main/actions';\n\n// Selectors\nimport { returnItems } from 'store/main/selector';\n\nimport { TextField } from '@material-ui/core';\nimport { FormDialog, Autocomplete } from 'components/index';\n\nimport {\n    IPlace,\n    ICategory\n} from 'constants/objectInterfaces';\nimport { objectTypes } from 'constants/general';\n\ninterface IProps {\n    isOpen: boolean;\n    onClose: () => void;\n    onConfirm: (object: IPlace) => void;\n}\n\nconst AddPlaceModal = ({\n    isOpen,\n    onClose,\n    onConfirm\n}: IProps) => {\n    const categories: ICategory[] = useSelector((state) => returnItems(state, objectTypes.placesCategories));\n    const [selectedItem, setSelectedItem] = useState<IPlace | null>(null);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getPlacesCategories());\n    }, []);\n\n    const onDescriptionChange = (event: any) => {\n        const value = event.target.value;\n\n        if (value) {\n            setSelectedItem({\n                ...selectedItem,\n                created: selectedItem?.created || '',\n                category_id: selectedItem?.category_id,\n                category_description: selectedItem?.category_description || '',\n                description: value,\n                id: selectedItem?.id\n            });\n        }\n    };\n\n    const onCategoryChange = (\n        event: any,\n        object: any = null\n    ) => {\n        if (object) {\n            setSelectedItem({\n                ...selectedItem,\n                created: selectedItem?.created || '',\n                category_id: object.id,\n                category_description: selectedItem?.category_description || '',\n                description: selectedItem?.description || '',\n                id: selectedItem?.id\n            });\n        }\n    };\n\n    const renderAddDialogForm = () => (\n        <>\n            <TextField\n                autoFocus\n                fullWidth\n                id=\"description\"\n                label=\"Nome\"\n                type=\"text\"\n                onChange={onDescriptionChange}\n            />\n            <div className=\"min-padding\">\n                <Autocomplete\n                    options={categories}\n                    title=\"Categoria\"\n                    onChange={onCategoryChange}\n                />\n            </div>\n        </>\n    );\n\n    return (\n        <FormDialog\n            isOpen={isOpen}\n            onClose={onClose}\n            onConfirm={() => selectedItem ? onConfirm(selectedItem) : null}\n            title='Adicionar Novo Lugar'\n        >\n            {renderAddDialogForm()}\n        </FormDialog>\n    );\n};\n\nexport default AddPlaceModal;\n","D:\\workspace\\shopping-app\\src\\sections\\products_section\\list\\components\\add_product_modal.tsx",["324","325"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Actions\nimport { fetchProductCategories } from 'store/product/actions';\n\n// Selectors\nimport { getProductCategories } from 'store/product/selector';\n\nimport { TextField } from '@material-ui/core';\nimport { FormDialog, Autocomplete } from 'components/index';\nimport {\n    product as productModel\n} from 'constants/objectModels';\n\nimport {\n    IProduct,\n    ICategory\n} from 'constants/objectInterfaces';\n\n// import { objectTypes } from 'constants/general';\n\ninterface IProps {\n    isOpen: boolean;\n    onClose: () => void;\n    onConfirm: (object: IProduct) => void;\n}\n\nconst AddProductModal = ({\n    isOpen,\n    onClose,\n    onConfirm\n}: IProps) => {\n    const [selectedItem, setSelectedItem] = useState<IProduct>(productModel);\n    const categories: ICategory[] = useSelector(getProductCategories);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchProductCategories());\n    }, []);\n\n    const onDescriptionChange = (event: any) => {\n        setSelectedItem({\n            ...selectedItem,\n            description: event.target.value\n        });\n    };\n\n    const onCategoryChange = (\n        description: any = null\n    ) => {\n        let category_id = null;\n        let category_description = '';\n\n        if (description) {\n            const categoryObject = categories.find((category) => category.description === description);\n\n            if (categoryObject !== undefined && categoryObject.id) {\n                category_id = categoryObject.id;\n                category_description = categoryObject.description;\n            }\n        }\n\n        setSelectedItem({\n            ...selectedItem,\n            category_id,\n            category_description\n        });\n    };\n\n    const renderAddDialogForm = () => (\n        <>\n            <TextField\n                autoFocus\n                fullWidth\n                classes={{ root: 'of-white' }}\n                id=\"description\"\n                label=\"Nome\"\n                type=\"text\"\n                onChange={onDescriptionChange}\n            />\n            <div className=\"min-padding\">\n                <Autocomplete\n                    options={categories}\n                    title=\"Categoria\"\n                    onChange={onCategoryChange}\n                />\n            </div>\n        </>\n    );\n\n    return (\n        <FormDialog\n            isEnable={selectedItem.description !== '' && selectedItem.category_id !== null}\n            isOpen={isOpen}\n            onClose={onClose}\n            onConfirm={() => onConfirm(selectedItem)}\n            title='Adicionar Novo Produto'\n        >\n            {renderAddDialogForm()}\n        </FormDialog>\n    );\n};\n\nexport default AddProductModal;\n","D:\\workspace\\shopping-app\\src\\sections\\products_section\\list\\components\\delete_product_modal.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\places_section\\categories_list\\categories_list.tsx",["326"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// Actions\r\nimport { setPlacesCategories, getPlacesCategories, removeFromList } from 'store/main/actions';\r\nimport deleteItem from 'services/dataDeleters';\r\n\r\n// Selectors\r\nimport { returnItems } from 'store/main/selector';\r\n\r\n// Components\r\nimport CategoriesSection from 'sections/categories/categories';\r\n\r\nimport { objectTypes } from 'constants/general';\r\nimport { ICategory } from 'constants/objectInterfaces';\r\n\r\nconst PlacesCategories = () => {\r\n    const [currentPage, setCurrentPage] = useState<number>(0);\r\n\r\n    const objectType = objectTypes.placesCategories;\r\n    const categories: ICategory[] = useSelector((state) => returnItems(state, objectType));\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPlacesCategories(currentPage));\r\n    }, []);\r\n\r\n    const headers = {\r\n        key: 'description',\r\n        value: 'Categoria de Lugares',\r\n        sortable: true\r\n    };\r\n\r\n    const color = 'orange';\r\n\r\n    const deleteCategory = (category: ICategory) => {\r\n        dispatch(deleteItem(category.id, objectType));\r\n        dispatch(removeFromList(category, objectType));\r\n    }\r\n\r\n    const addNewCategory = (categoryName: string) => {\r\n        const newCategory: ICategory = {\r\n            id: undefined,\r\n            description: categoryName\r\n        }\r\n        dispatch(setPlacesCategories(newCategory));\r\n    };\r\n\r\n    const onSortChange = (column: string, direction: string) => {\r\n        console.log('Sorting by: ' + column + direction);\r\n        dispatch(getPlacesCategories(currentPage, column, direction));\r\n    };\r\n\r\n    return (\r\n        <CategoriesSection\r\n            bodyColumns={categories}\r\n            color={color}\r\n            headerColumns={headers}\r\n            onAddNewCategory={addNewCategory}\r\n            onDeleteCategory={deleteCategory}\r\n            onSortChange={(column: string, direction: string) => onSortChange(column, direction)}\r\n        />\r\n    );\r\n}\r\n\r\nexport default PlacesCategories;\r\n","D:\\workspace\\shopping-app\\src\\services\\utilities.js",["327"],"import { objectTypes } from 'constants/general';\n\n/** assumes array elements are primitive types\n* check whether 2 arrays are equal sets.\n* @param  {} a1 is an array\n* @param  {} a2 is an array\n*/\nexport function areArraysEqualSets(a1, a2) {\n    const superSet = {};\n    for (const i of a1) {\n        const e = i + typeof i;\n        superSet[e] = 1;\n    }\n\n    for (const i of a2) {\n        const e = i + typeof i;\n        if (!superSet[e]) {\n            return false;\n        }\n        superSet[e] = 2;\n    }\n\n    for (let e in superSet) {\n        if (superSet[e] === 1) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction objectsAreEqual(x, y) {\n    for (var propertyName in x) {\n        if (x[propertyName] !== y[propertyName]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function arrayOfObjectsAreEqual(x, y) {\n    const areEqual = [];\n    y.forEach((elementY) => {\n        const found = x.find((elementX) => elementY.id === elementX.id);\n        if (found === undefined || !objectsAreEqual(elementY, found)) {\n            areEqual.push(elementY);\n        }\n    });\n\n    return areEqual;\n}\n\nexport async function http(request) {\n    const response = await fetch(request);\n\n    try {\n        // may error if there is no body\n        response.parsedBody = await response.json();\n    } catch (ex) {\n        console.log(ex)\n    }\n\n    if (!response.ok) {\n        throw new Error(response.statusText);\n    }\n    return response;\n}\n","D:\\workspace\\shopping-app\\src\\sections\\products_section\\categories_list\\categories_list.tsx",[],"D:\\workspace\\shopping-app\\src\\sections\\products_section\\list\\products.tsx",[],"D:\\workspace\\shopping-app\\src\\components\\search_input\\search_input.tsx",[],"D:\\workspace\\shopping-app\\src\\store\\product\\reducer.ts",[],"D:\\workspace\\shopping-app\\src\\store\\product\\selector.ts",[],"D:\\workspace\\shopping-app\\src\\store\\product\\actions.ts",[],"D:\\workspace\\shopping-app\\src\\constants\\objectInterfaces.tsx",[],"D:\\workspace\\shopping-app\\src\\store\\shopping_list\\selector.ts",[],"D:\\workspace\\shopping-app\\src\\store\\brand\\reducer.ts",[],"D:\\workspace\\shopping-app\\src\\store\\brand\\actions.ts",[],"D:\\workspace\\shopping-app\\src\\store\\brand\\selector.ts",[],{"ruleId":"328","replacedBy":"329"},{"ruleId":"330","replacedBy":"331"},{"ruleId":"328","replacedBy":"329"},{"ruleId":"330","replacedBy":"331"},{"ruleId":"332","severity":1,"message":"333","line":7,"column":25,"nodeType":"334","messageId":"335","endLine":7,"endColumn":28,"suggestions":"336"},{"ruleId":"332","severity":1,"message":"333","line":7,"column":33,"nodeType":"334","messageId":"335","endLine":7,"endColumn":36,"suggestions":"337"},{"ruleId":"332","severity":1,"message":"333","line":24,"column":32,"nodeType":"334","messageId":"335","endLine":24,"endColumn":35,"suggestions":"338"},{"ruleId":"332","severity":1,"message":"333","line":24,"column":45,"nodeType":"334","messageId":"335","endLine":24,"endColumn":48,"suggestions":"339"},{"ruleId":"332","severity":1,"message":"333","line":15,"column":23,"nodeType":"334","messageId":"335","endLine":15,"endColumn":26,"suggestions":"340"},{"ruleId":"332","severity":1,"message":"333","line":41,"column":29,"nodeType":"334","messageId":"335","endLine":41,"endColumn":32,"suggestions":"341"},{"ruleId":"342","severity":1,"message":"343","line":1,"column":17,"nodeType":"344","messageId":"345","endLine":1,"endColumn":25},{"ruleId":"332","severity":1,"message":"333","line":27,"column":19,"nodeType":"334","messageId":"335","endLine":27,"endColumn":22,"suggestions":"346"},{"ruleId":"332","severity":1,"message":"333","line":32,"column":39,"nodeType":"334","messageId":"335","endLine":32,"endColumn":42,"suggestions":"347"},{"ruleId":"332","severity":1,"message":"333","line":33,"column":35,"nodeType":"334","messageId":"335","endLine":33,"endColumn":38,"suggestions":"348"},{"ruleId":"332","severity":1,"message":"333","line":34,"column":40,"nodeType":"334","messageId":"335","endLine":34,"endColumn":43,"suggestions":"349"},{"ruleId":"332","severity":1,"message":"333","line":56,"column":34,"nodeType":"334","messageId":"335","endLine":56,"endColumn":37,"suggestions":"350"},{"ruleId":"332","severity":1,"message":"333","line":78,"column":30,"nodeType":"334","messageId":"335","endLine":78,"endColumn":33,"suggestions":"351"},{"ruleId":"342","severity":1,"message":"352","line":27,"column":25,"nodeType":"344","messageId":"345","endLine":27,"endColumn":39},{"ruleId":"353","severity":1,"message":"354","line":1,"column":8,"nodeType":"344","messageId":"355","endLine":1,"endColumn":13},{"ruleId":"353","severity":1,"message":"354","line":1,"column":8,"nodeType":"344","messageId":"355","endLine":1,"endColumn":13},{"ruleId":"353","severity":1,"message":"354","line":1,"column":8,"nodeType":"344","messageId":"355","endLine":1,"endColumn":13},{"ruleId":"353","severity":1,"message":"354","line":1,"column":8,"nodeType":"344","messageId":"355","endLine":1,"endColumn":13},{"ruleId":"332","severity":1,"message":"333","line":86,"column":42,"nodeType":"334","messageId":"335","endLine":86,"endColumn":45,"suggestions":"356"},{"ruleId":"332","severity":1,"message":"333","line":113,"column":46,"nodeType":"334","messageId":"335","endLine":113,"endColumn":49,"suggestions":"357"},{"ruleId":"358","severity":1,"message":"359","line":40,"column":26,"nodeType":"360","messageId":"361","endLine":40,"endColumn":28},{"ruleId":"358","severity":1,"message":"359","line":45,"column":26,"nodeType":"360","messageId":"361","endLine":45,"endColumn":28},{"ruleId":"332","severity":1,"message":"333","line":20,"column":41,"nodeType":"334","messageId":"335","endLine":20,"endColumn":44,"suggestions":"362"},{"ruleId":"332","severity":1,"message":"333","line":11,"column":25,"nodeType":"334","messageId":"335","endLine":11,"endColumn":28,"suggestions":"363"},{"ruleId":"342","severity":1,"message":"364","line":6,"column":17,"nodeType":"344","messageId":"345","endLine":6,"endColumn":30},{"ruleId":"342","severity":1,"message":"365","line":9,"column":10,"nodeType":"344","messageId":"345","endLine":9,"endColumn":19},{"ruleId":"332","severity":1,"message":"333","line":14,"column":25,"nodeType":"334","messageId":"335","endLine":14,"endColumn":28,"suggestions":"366"},{"ruleId":"332","severity":1,"message":"333","line":24,"column":41,"nodeType":"334","messageId":"335","endLine":24,"endColumn":44,"suggestions":"367"},{"ruleId":"342","severity":1,"message":"352","line":23,"column":25,"nodeType":"344","messageId":"345","endLine":23,"endColumn":39},{"ruleId":"332","severity":1,"message":"333","line":39,"column":41,"nodeType":"334","messageId":"335","endLine":39,"endColumn":44,"suggestions":"368"},{"ruleId":"332","severity":1,"message":"333","line":55,"column":16,"nodeType":"334","messageId":"335","endLine":55,"endColumn":19,"suggestions":"369"},{"ruleId":"332","severity":1,"message":"333","line":56,"column":17,"nodeType":"334","messageId":"335","endLine":56,"endColumn":20,"suggestions":"370"},{"ruleId":"332","severity":1,"message":"333","line":43,"column":41,"nodeType":"334","messageId":"335","endLine":43,"endColumn":44,"suggestions":"371"},{"ruleId":"332","severity":1,"message":"333","line":51,"column":22,"nodeType":"334","messageId":"335","endLine":51,"endColumn":25,"suggestions":"372"},{"ruleId":"342","severity":1,"message":"352","line":18,"column":25,"nodeType":"344","messageId":"345","endLine":18,"endColumn":39},{"ruleId":"342","severity":1,"message":"373","line":1,"column":10,"nodeType":"344","messageId":"345","endLine":1,"endColumn":21},"no-native-reassign",["374"],"no-negated-in-lhs",["375"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["376","377"],["378","379"],["380","381"],["382","383"],["384","385"],["386","387"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["388","389"],["390","391"],["392","393"],["394","395"],["396","397"],["398","399"],"'setCurrentPage' is assigned a value but never used.","no-use-before-define","'React' was used before it was defined.","usedBeforeDefined",["400","401"],["402","403"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["404","405"],["406","407"],"'categoryModel' is defined but never used.","'ICategory' is defined but never used.",["408","409"],["410","411"],["412","413"],["414","415"],["416","417"],["418","419"],["420","421"],"'objectTypes' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"422","fix":"423","desc":"424"},{"messageId":"425","fix":"426","desc":"427"},{"messageId":"422","fix":"428","desc":"424"},{"messageId":"425","fix":"429","desc":"427"},{"messageId":"422","fix":"430","desc":"424"},{"messageId":"425","fix":"431","desc":"427"},{"messageId":"422","fix":"432","desc":"424"},{"messageId":"425","fix":"433","desc":"427"},{"messageId":"422","fix":"434","desc":"424"},{"messageId":"425","fix":"435","desc":"427"},{"messageId":"422","fix":"436","desc":"424"},{"messageId":"425","fix":"437","desc":"427"},{"messageId":"422","fix":"438","desc":"424"},{"messageId":"425","fix":"439","desc":"427"},{"messageId":"422","fix":"440","desc":"424"},{"messageId":"425","fix":"441","desc":"427"},{"messageId":"422","fix":"442","desc":"424"},{"messageId":"425","fix":"443","desc":"427"},{"messageId":"422","fix":"444","desc":"424"},{"messageId":"425","fix":"445","desc":"427"},{"messageId":"422","fix":"446","desc":"424"},{"messageId":"425","fix":"447","desc":"427"},{"messageId":"422","fix":"448","desc":"424"},{"messageId":"425","fix":"449","desc":"427"},{"messageId":"422","fix":"450","desc":"424"},{"messageId":"425","fix":"451","desc":"427"},{"messageId":"422","fix":"452","desc":"424"},{"messageId":"425","fix":"453","desc":"427"},{"messageId":"422","fix":"454","desc":"424"},{"messageId":"425","fix":"455","desc":"427"},{"messageId":"422","fix":"456","desc":"424"},{"messageId":"425","fix":"457","desc":"427"},{"messageId":"422","fix":"458","desc":"424"},{"messageId":"425","fix":"459","desc":"427"},{"messageId":"422","fix":"460","desc":"424"},{"messageId":"425","fix":"461","desc":"427"},{"messageId":"422","fix":"462","desc":"424"},{"messageId":"425","fix":"463","desc":"427"},{"messageId":"422","fix":"464","desc":"424"},{"messageId":"425","fix":"465","desc":"427"},{"messageId":"422","fix":"466","desc":"424"},{"messageId":"425","fix":"467","desc":"427"},{"messageId":"422","fix":"468","desc":"424"},{"messageId":"425","fix":"469","desc":"427"},{"messageId":"422","fix":"470","desc":"424"},{"messageId":"425","fix":"471","desc":"427"},"suggestUnknown",{"range":"472","text":"473"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"472","text":"474"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"475","text":"473"},{"range":"475","text":"474"},{"range":"476","text":"473"},{"range":"476","text":"474"},{"range":"477","text":"473"},{"range":"477","text":"474"},{"range":"478","text":"473"},{"range":"478","text":"474"},{"range":"479","text":"473"},{"range":"479","text":"474"},{"range":"480","text":"473"},{"range":"480","text":"474"},{"range":"481","text":"473"},{"range":"481","text":"474"},{"range":"482","text":"473"},{"range":"482","text":"474"},{"range":"483","text":"473"},{"range":"483","text":"474"},{"range":"484","text":"473"},{"range":"484","text":"474"},{"range":"485","text":"473"},{"range":"485","text":"474"},{"range":"486","text":"473"},{"range":"486","text":"474"},{"range":"487","text":"473"},{"range":"487","text":"474"},{"range":"488","text":"473"},{"range":"488","text":"474"},{"range":"489","text":"473"},{"range":"489","text":"474"},{"range":"490","text":"473"},{"range":"490","text":"474"},{"range":"491","text":"473"},{"range":"491","text":"474"},{"range":"492","text":"473"},{"range":"492","text":"474"},{"range":"493","text":"473"},{"range":"493","text":"474"},{"range":"494","text":"473"},{"range":"494","text":"474"},{"range":"495","text":"473"},{"range":"495","text":"474"},{"range":"496","text":"473"},{"range":"496","text":"474"},[204,207],"unknown","never",[212,215],[599,602],[612,615],[363,366],[1036,1039],[468,471],[634,637],[683,686],[737,740],[1285,1288],[2039,2042],[2606,2609],[3886,3889],[482,485],[324,327],[382,385],[587,590],[1003,1006],[1483,1486],[1504,1507],[1068,1071],[1249,1252]]